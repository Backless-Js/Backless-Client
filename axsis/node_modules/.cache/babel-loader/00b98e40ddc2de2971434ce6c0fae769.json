{"ast":null,"code":"// fancy-pants parsing of argv, originally forked\n// from minimist: https://www.npmjs.com/package/minimist\nvar camelCase = require('camelcase');\n\nvar path = require('path');\n\nfunction increment(orig) {\n  return orig !== undefined ? orig + 1 : 0;\n}\n\nmodule.exports = function (args, opts, y18n) {\n  if (!opts) opts = {};\n  var __ = y18n.__;\n  var error = null;\n  var flags = {\n    arrays: {},\n    bools: {},\n    strings: {},\n    counts: {},\n    normalize: {},\n    configs: {},\n    defaulted: {}\n  };\n  [].concat(opts['array']).filter(Boolean).forEach(function (key) {\n    flags.arrays[key] = true;\n  });\n  [].concat(opts['boolean']).filter(Boolean).forEach(function (key) {\n    flags.bools[key] = true;\n  });\n  [].concat(opts.string).filter(Boolean).forEach(function (key) {\n    flags.strings[key] = true;\n  });\n  [].concat(opts.count).filter(Boolean).forEach(function (key) {\n    flags.counts[key] = true;\n  });\n  [].concat(opts.normalize).filter(Boolean).forEach(function (key) {\n    flags.normalize[key] = true;\n  });\n  Object.keys(opts.config).forEach(function (k) {\n    flags.configs[k] = opts.config[k];\n  });\n  var aliases = {};\n  var newAliases = {};\n  extendAliases(opts.key);\n  extendAliases(opts.alias);\n  extendAliases(opts.default);\n  var defaults = opts['default'] || {};\n  Object.keys(defaults).forEach(function (key) {\n    if (/-/.test(key) && !opts.alias[key]) {\n      aliases[key] = aliases[key] || [];\n    }\n\n    (aliases[key] || []).forEach(function (alias) {\n      defaults[alias] = defaults[key];\n    });\n  });\n  var argv = {\n    _: []\n  };\n  Object.keys(flags.bools).forEach(function (key) {\n    setArg(key, !(key in defaults) ? false : defaults[key]);\n    setDefaulted(key);\n  });\n  var notFlags = [];\n\n  if (args.indexOf('--') !== -1) {\n    notFlags = args.slice(args.indexOf('--') + 1);\n    args = args.slice(0, args.indexOf('--'));\n  }\n\n  for (var i = 0; i < args.length; i++) {\n    var arg = args[i];\n    var broken;\n    var key;\n    var letters;\n    var m;\n    var next;\n    var value;\n\n    if (!arg) {\n      continue;\n    } // -- seperated by =\n\n\n    if (arg.match(/^--.+=/)) {\n      // Using [\\s\\S] instead of . because js doesn't support the\n      // 'dotall' regex modifier. See:\n      // http://stackoverflow.com/a/1068308/13216\n      m = arg.match(/^--([^=]+)=([\\s\\S]*)$/); // nargs format = '--f=monkey washing cat'\n\n      if (checkAllAliases(m[1], opts.narg)) {\n        args.splice(i + 1, m[1], m[2]);\n        i = eatNargs(i, m[1], args); // arrays format = '--f=a b c'\n      } else if (checkAllAliases(m[1], flags.arrays) && args.length > i + 1) {\n        args.splice(i + 1, m[1], m[2]);\n        i = eatArray(i, m[1], args);\n      } else {\n        setArg(m[1], m[2]);\n      }\n    } else if (arg.match(/^--no-.+/)) {\n      key = arg.match(/^--no-(.+)/)[1];\n      setArg(key, false); // -- seperated by space.\n    } else if (arg.match(/^--.+/)) {\n      key = arg.match(/^--(.+)/)[1]; // nargs format = '--foo a b c'\n\n      if (checkAllAliases(key, opts.narg)) {\n        i = eatNargs(i, key, args); // array format = '--foo a b c'\n      } else if (checkAllAliases(key, flags.arrays) && args.length > i + 1) {\n        i = eatArray(i, key, args);\n      } else {\n        next = args[i + 1];\n\n        if (next !== undefined && !next.match(/^-/) && !checkAllAliases(key, flags.bools) && !checkAllAliases(key, flags.counts)) {\n          setArg(key, next);\n          i++;\n        } else if (/^(true|false)$/.test(next)) {\n          setArg(key, next);\n          i++;\n        } else {\n          setArg(key, defaultForType(guessType(key, flags)));\n        }\n      } // dot-notation flag seperated by '='.\n\n    } else if (arg.match(/^-.\\..+=/)) {\n      m = arg.match(/^-([^=]+)=([\\s\\S]*)$/);\n      setArg(m[1], m[2]); // dot-notation flag seperated by space.\n    } else if (arg.match(/^-.\\..+/)) {\n      next = args[i + 1];\n      key = arg.match(/^-(.\\..+)/)[1];\n\n      if (next !== undefined && !next.match(/^-/) && !checkAllAliases(key, flags.bools) && !checkAllAliases(key, flags.counts)) {\n        setArg(key, next);\n        i++;\n      } else {\n        setArg(key, defaultForType(guessType(key, flags)));\n      }\n    } else if (arg.match(/^-[^-]+/)) {\n      letters = arg.slice(1, -1).split('');\n      broken = false;\n\n      for (var j = 0; j < letters.length; j++) {\n        next = arg.slice(j + 2);\n\n        if (letters[j + 1] && letters[j + 1] === '=') {\n          value = arg.slice(j + 3);\n          key = letters[j]; // nargs format = '-f=monkey washing cat'\n\n          if (checkAllAliases(letters[j], opts.narg)) {\n            args.splice(i + 1, 0, value);\n            i = eatNargs(i, key, args); // array format = '-f=a b c'\n          } else if (checkAllAliases(key, flags.arrays) && args.length > i + 1) {\n            args.splice(i + 1, 0, value);\n            i = eatArray(i, key, args);\n          } else {\n            setArg(key, value);\n          }\n\n          broken = true;\n          break;\n        }\n\n        if (next === '-') {\n          setArg(letters[j], next);\n          continue;\n        }\n\n        if (/[A-Za-z]/.test(letters[j]) && /-?\\d+(\\.\\d*)?(e-?\\d+)?$/.test(next)) {\n          setArg(letters[j], next);\n          broken = true;\n          break;\n        }\n\n        if (letters[j + 1] && letters[j + 1].match(/\\W/)) {\n          setArg(letters[j], arg.slice(j + 2));\n          broken = true;\n          break;\n        } else {\n          setArg(letters[j], defaultForType(guessType(letters[j], flags)));\n        }\n      }\n\n      key = arg.slice(-1)[0];\n\n      if (!broken && key !== '-') {\n        // nargs format = '-f a b c'\n        if (checkAllAliases(key, opts.narg)) {\n          i = eatNargs(i, key, args); // array format = '-f a b c'\n        } else if (checkAllAliases(key, flags.arrays) && args.length > i + 1) {\n          i = eatArray(i, key, args);\n        } else {\n          if (args[i + 1] && !/^(-|--)[^-]/.test(args[i + 1]) && !checkAllAliases(key, flags.bools) && !checkAllAliases(key, flags.counts)) {\n            setArg(key, args[i + 1]);\n            i++;\n          } else if (args[i + 1] && /true|false/.test(args[i + 1])) {\n            setArg(key, args[i + 1]);\n            i++;\n          } else {\n            setArg(key, defaultForType(guessType(key, flags)));\n          }\n        }\n      }\n    } else {\n      argv._.push(flags.strings['_'] || !isNumber(arg) ? arg : Number(arg));\n    }\n  } // order of precedence:\n  // 1. command line arg\n  // 2. value from config file\n  // 3. value from env var\n  // 4. configured default value\n\n\n  applyEnvVars(opts, argv, true); // special case: check env vars that point to config file\n\n  setConfig(argv);\n  applyEnvVars(opts, argv, false);\n  applyDefaultsAndAliases(argv, aliases, defaults);\n  Object.keys(flags.counts).forEach(function (key) {\n    setArg(key, defaults[key]);\n  });\n  notFlags.forEach(function (key) {\n    argv._.push(key);\n  }); // how many arguments should we consume, based\n  // on the nargs option?\n\n  function eatNargs(i, key, args) {\n    var toEat = checkAllAliases(key, opts.narg);\n    if (args.length - (i + 1) < toEat) error = Error(__('Not enough arguments following: %s', key));\n\n    for (var ii = i + 1; ii < toEat + i + 1; ii++) {\n      setArg(key, args[ii]);\n    }\n\n    return i + toEat;\n  } // if an option is an array, eat all non-hyphenated arguments\n  // following it... YUM!\n  // e.g., --foo apple banana cat becomes [\"apple\", \"banana\", \"cat\"]\n\n\n  function eatArray(i, key, args) {\n    for (var ii = i + 1; ii < args.length; ii++) {\n      if (/^-/.test(args[ii])) break;\n      i = ii;\n      setArg(key, args[ii]);\n    }\n\n    return i;\n  }\n\n  function setArg(key, val) {\n    unsetDefaulted(key); // handle parsing boolean arguments --foo=true --bar false.\n\n    if (checkAllAliases(key, flags.bools) || checkAllAliases(key, flags.counts)) {\n      if (typeof val === 'string') val = val === 'true';\n    }\n\n    if (/-/.test(key) && !(aliases[key] && aliases[key].length)) {\n      var c = camelCase(key);\n      aliases[key] = [c];\n      newAliases[c] = true;\n    }\n\n    var value = !checkAllAliases(key, flags.strings) && isNumber(val) ? Number(val) : val;\n\n    if (checkAllAliases(key, flags.counts)) {\n      value = increment;\n    }\n\n    var splitKey = key.split('.');\n    setKey(argv, splitKey, value); // alias references an inner-value within\n    // a dot-notation object. see #279.\n\n    if (~key.indexOf('.') && aliases[key]) {\n      aliases[key].forEach(function (x) {\n        x = x.split('.');\n        setKey(argv, x, value);\n      });\n    }\n\n    ;\n    (aliases[splitKey[0]] || []).forEach(function (x) {\n      x = x.split('.'); // handle populating dot notation for both\n      // the key and its aliases.\n\n      if (splitKey.length > 1) {\n        var a = [].concat(splitKey);\n        a.shift(); // nuke the old key.\n\n        x = x.concat(a);\n      }\n\n      setKey(argv, x, value);\n    });\n    var keys = [key].concat(aliases[key] || []);\n\n    for (var i = 0, l = keys.length; i < l; i++) {\n      if (flags.normalize[keys[i]]) {\n        keys.forEach(function (key) {\n          argv.__defineSetter__(key, function (v) {\n            val = path.normalize(v);\n          });\n\n          argv.__defineGetter__(key, function () {\n            return typeof val === 'string' ? path.normalize(val) : val;\n          });\n        });\n        break;\n      }\n    }\n  } // set args from config.json file, this should be\n  // applied last so that defaults can be applied.\n\n\n  function setConfig(argv) {\n    var configLookup = {}; // expand defaults/aliases, in-case any happen to reference\n    // the config.json file.\n\n    applyDefaultsAndAliases(configLookup, aliases, defaults);\n    Object.keys(flags.configs).forEach(function (configKey) {\n      var configPath = argv[configKey] || configLookup[configKey];\n\n      if (configPath) {\n        try {\n          var config = null;\n          var resolvedConfigPath = path.resolve(process.cwd(), configPath);\n\n          if (typeof flags.configs[configKey] === 'function') {\n            try {\n              config = flags.configs[configKey](resolvedConfigPath);\n            } catch (e) {\n              config = e;\n            }\n\n            if (config instanceof Error) {\n              error = config;\n              return;\n            }\n          } else {\n            config = require(resolvedConfigPath);\n          }\n\n          Object.keys(config).forEach(function (key) {\n            // setting arguments via CLI takes precedence over\n            // values within the config file.\n            if (argv[key] === undefined || flags.defaulted[key]) {\n              delete argv[key];\n              setArg(key, config[key]);\n            }\n          });\n        } catch (ex) {\n          if (argv[configKey]) error = Error(__('Invalid JSON config file: %s', configPath));\n        }\n      }\n    });\n  }\n\n  function applyEnvVars(opts, argv, configOnly) {\n    if (typeof opts.envPrefix === 'undefined') return;\n    var prefix = typeof opts.envPrefix === 'string' ? opts.envPrefix : '';\n    Object.keys(process.env).forEach(function (envVar) {\n      if (prefix === '' || envVar.lastIndexOf(prefix, 0) === 0) {\n        var key = camelCase(envVar.substring(prefix.length));\n\n        if ((configOnly && flags.configs[key] || !configOnly) && (!(key in argv) || flags.defaulted[key])) {\n          setArg(key, process.env[envVar]);\n        }\n      }\n    });\n  }\n\n  function applyDefaultsAndAliases(obj, aliases, defaults) {\n    Object.keys(defaults).forEach(function (key) {\n      if (!hasKey(obj, key.split('.'))) {\n        setKey(obj, key.split('.'), defaults[key]);\n        (aliases[key] || []).forEach(function (x) {\n          if (hasKey(obj, x.split('.'))) return;\n          setKey(obj, x.split('.'), defaults[key]);\n        });\n      }\n    });\n  }\n\n  function hasKey(obj, keys) {\n    var o = obj;\n    keys.slice(0, -1).forEach(function (key) {\n      o = o[key] || {};\n    });\n    var key = keys[keys.length - 1];\n    if (typeof o !== 'object') return false;else return key in o;\n  }\n\n  function setKey(obj, keys, value) {\n    var o = obj;\n    keys.slice(0, -1).forEach(function (key) {\n      if (o[key] === undefined) o[key] = {};\n      o = o[key];\n    });\n    var key = keys[keys.length - 1];\n\n    if (value === increment) {\n      o[key] = increment(o[key]);\n    } else if (o[key] === undefined && checkAllAliases(key, flags.arrays)) {\n      o[key] = Array.isArray(value) ? value : [value];\n    } else if (o[key] === undefined || typeof o[key] === 'boolean') {\n      o[key] = value;\n    } else if (Array.isArray(o[key])) {\n      o[key].push(value);\n    } else {\n      o[key] = [o[key], value];\n    }\n  } // extend the aliases list with inferred aliases.\n\n\n  function extendAliases(obj) {\n    Object.keys(obj || {}).forEach(function (key) {\n      // short-circuit if we've already added a key\n      // to the aliases array, for example it might\n      // exist in both 'opts.default' and 'opts.key'.\n      if (aliases[key]) return;\n      aliases[key] = [].concat(opts.alias[key] || []); // For \"--option-name\", also set argv.optionName\n\n      aliases[key].concat(key).forEach(function (x) {\n        if (/-/.test(x)) {\n          var c = camelCase(x);\n          aliases[key].push(c);\n          newAliases[c] = true;\n        }\n      });\n      aliases[key].forEach(function (x) {\n        aliases[x] = [key].concat(aliases[key].filter(function (y) {\n          return x !== y;\n        }));\n      });\n    });\n  } // check if a flag is set for any of a key's aliases.\n\n\n  function checkAllAliases(key, flag) {\n    var isSet = false;\n    var toCheck = [].concat(aliases[key] || [], key);\n    toCheck.forEach(function (key) {\n      if (flag[key]) isSet = flag[key];\n    });\n    return isSet;\n  }\n\n  function setDefaulted(key) {\n    [].concat(aliases[key] || [], key).forEach(function (k) {\n      flags.defaulted[k] = true;\n    });\n  }\n\n  function unsetDefaulted(key) {\n    [].concat(aliases[key] || [], key).forEach(function (k) {\n      delete flags.defaulted[k];\n    });\n  } // return a default value, given the type of a flag.,\n  // e.g., key of type 'string' will default to '', rather than 'true'.\n\n\n  function defaultForType(type) {\n    var def = {\n      boolean: true,\n      string: '',\n      array: []\n    };\n    return def[type];\n  } // given a flag, enforce a default type.\n\n\n  function guessType(key, flags) {\n    var type = 'boolean';\n    if (flags.strings && flags.strings[key]) type = 'string';else if (flags.arrays && flags.arrays[key]) type = 'array';\n    return type;\n  }\n\n  function isNumber(x) {\n    if (typeof x === 'number') return true;\n    if (/^0x[0-9a-f]+$/i.test(x)) return true;\n    return /^[-+]?(?:\\d+(?:\\.\\d*)?|\\.\\d+)(e[-+]?\\d+)?$/.test(x);\n  }\n\n  return {\n    argv: argv,\n    aliases: aliases,\n    error: error,\n    newAliases: newAliases\n  };\n};","map":{"version":3,"sources":["/home/marcel/Desktop/CobaProject/GUI backless-js/axsis/node_modules/curlconverter/node_modules/yargs/lib/parser.js"],"names":["camelCase","require","path","increment","orig","undefined","module","exports","args","opts","y18n","__","error","flags","arrays","bools","strings","counts","normalize","configs","defaulted","concat","filter","Boolean","forEach","key","string","count","Object","keys","config","k","aliases","newAliases","extendAliases","alias","default","defaults","test","argv","_","setArg","setDefaulted","notFlags","indexOf","slice","i","length","arg","broken","letters","m","next","value","match","checkAllAliases","narg","splice","eatNargs","eatArray","defaultForType","guessType","split","j","push","isNumber","Number","applyEnvVars","setConfig","applyDefaultsAndAliases","toEat","Error","ii","val","unsetDefaulted","c","splitKey","setKey","x","a","shift","l","__defineSetter__","v","__defineGetter__","configLookup","configKey","configPath","resolvedConfigPath","resolve","process","cwd","e","ex","configOnly","envPrefix","prefix","env","envVar","lastIndexOf","substring","obj","hasKey","o","Array","isArray","y","flag","isSet","toCheck","type","def","boolean","array"],"mappings":"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","sourcesContent":["// fancy-pants parsing of argv, originally forked\n// from minimist: https://www.npmjs.com/package/minimist\nvar camelCase = require('camelcase')\nvar path = require('path')\n\nfunction increment (orig) {\n  return orig !== undefined ? orig + 1 : 0\n}\n\nmodule.exports = function (args, opts, y18n) {\n  if (!opts) opts = {}\n\n  var __ = y18n.__\n  var error = null\n  var flags = { arrays: {}, bools: {}, strings: {}, counts: {}, normalize: {}, configs: {}, defaulted: {} }\n\n  ;[].concat(opts['array']).filter(Boolean).forEach(function (key) {\n    flags.arrays[key] = true\n  })\n\n  ;[].concat(opts['boolean']).filter(Boolean).forEach(function (key) {\n    flags.bools[key] = true\n  })\n\n  ;[].concat(opts.string).filter(Boolean).forEach(function (key) {\n    flags.strings[key] = true\n  })\n\n  ;[].concat(opts.count).filter(Boolean).forEach(function (key) {\n    flags.counts[key] = true\n  })\n\n  ;[].concat(opts.normalize).filter(Boolean).forEach(function (key) {\n    flags.normalize[key] = true\n  })\n\n  Object.keys(opts.config).forEach(function (k) {\n    flags.configs[k] = opts.config[k]\n  })\n\n  var aliases = {}\n  var newAliases = {}\n\n  extendAliases(opts.key)\n  extendAliases(opts.alias)\n  extendAliases(opts.default)\n\n  var defaults = opts['default'] || {}\n  Object.keys(defaults).forEach(function (key) {\n    if (/-/.test(key) && !opts.alias[key]) {\n      aliases[key] = aliases[key] || []\n    }\n    (aliases[key] || []).forEach(function (alias) {\n      defaults[alias] = defaults[key]\n    })\n  })\n\n  var argv = { _: [] }\n\n  Object.keys(flags.bools).forEach(function (key) {\n    setArg(key, !(key in defaults) ? false : defaults[key])\n    setDefaulted(key)\n  })\n\n  var notFlags = []\n  if (args.indexOf('--') !== -1) {\n    notFlags = args.slice(args.indexOf('--') + 1)\n    args = args.slice(0, args.indexOf('--'))\n  }\n\n  for (var i = 0; i < args.length; i++) {\n    var arg = args[i]\n    var broken\n    var key\n    var letters\n    var m\n    var next\n    var value\n\n    if (!arg) {\n      continue\n    }\n    // -- seperated by =\n    if (arg.match(/^--.+=/)) {\n      // Using [\\s\\S] instead of . because js doesn't support the\n      // 'dotall' regex modifier. See:\n      // http://stackoverflow.com/a/1068308/13216\n      m = arg.match(/^--([^=]+)=([\\s\\S]*)$/)\n\n      // nargs format = '--f=monkey washing cat'\n      if (checkAllAliases(m[1], opts.narg)) {\n        args.splice(i + 1, m[1], m[2])\n        i = eatNargs(i, m[1], args)\n      // arrays format = '--f=a b c'\n      } else if (checkAllAliases(m[1], flags.arrays) && args.length > i + 1) {\n        args.splice(i + 1, m[1], m[2])\n        i = eatArray(i, m[1], args)\n      } else {\n        setArg(m[1], m[2])\n      }\n    } else if (arg.match(/^--no-.+/)) {\n      key = arg.match(/^--no-(.+)/)[1]\n      setArg(key, false)\n\n    // -- seperated by space.\n    } else if (arg.match(/^--.+/)) {\n      key = arg.match(/^--(.+)/)[1]\n\n      // nargs format = '--foo a b c'\n      if (checkAllAliases(key, opts.narg)) {\n        i = eatNargs(i, key, args)\n      // array format = '--foo a b c'\n      } else if (checkAllAliases(key, flags.arrays) && args.length > i + 1) {\n        i = eatArray(i, key, args)\n      } else {\n        next = args[i + 1]\n\n        if (next !== undefined && !next.match(/^-/) &&\n          !checkAllAliases(key, flags.bools) &&\n          !checkAllAliases(key, flags.counts)) {\n          setArg(key, next)\n          i++\n        } else if (/^(true|false)$/.test(next)) {\n          setArg(key, next)\n          i++\n        } else {\n          setArg(key, defaultForType(guessType(key, flags)))\n        }\n      }\n\n    // dot-notation flag seperated by '='.\n    } else if (arg.match(/^-.\\..+=/)) {\n      m = arg.match(/^-([^=]+)=([\\s\\S]*)$/)\n      setArg(m[1], m[2])\n\n    // dot-notation flag seperated by space.\n    } else if (arg.match(/^-.\\..+/)) {\n      next = args[i + 1]\n      key = arg.match(/^-(.\\..+)/)[1]\n\n      if (next !== undefined && !next.match(/^-/) &&\n        !checkAllAliases(key, flags.bools) &&\n        !checkAllAliases(key, flags.counts)) {\n        setArg(key, next)\n        i++\n      } else {\n        setArg(key, defaultForType(guessType(key, flags)))\n      }\n    } else if (arg.match(/^-[^-]+/)) {\n      letters = arg.slice(1, -1).split('')\n      broken = false\n\n      for (var j = 0; j < letters.length; j++) {\n        next = arg.slice(j + 2)\n\n        if (letters[j + 1] && letters[j + 1] === '=') {\n          value = arg.slice(j + 3)\n          key = letters[j]\n\n          // nargs format = '-f=monkey washing cat'\n          if (checkAllAliases(letters[j], opts.narg)) {\n            args.splice(i + 1, 0, value)\n            i = eatNargs(i, key, args)\n          // array format = '-f=a b c'\n          } else if (checkAllAliases(key, flags.arrays) && args.length > i + 1) {\n            args.splice(i + 1, 0, value)\n            i = eatArray(i, key, args)\n          } else {\n            setArg(key, value)\n          }\n\n          broken = true\n          break\n        }\n\n        if (next === '-') {\n          setArg(letters[j], next)\n          continue\n        }\n\n        if (/[A-Za-z]/.test(letters[j]) &&\n          /-?\\d+(\\.\\d*)?(e-?\\d+)?$/.test(next)) {\n          setArg(letters[j], next)\n          broken = true\n          break\n        }\n\n        if (letters[j + 1] && letters[j + 1].match(/\\W/)) {\n          setArg(letters[j], arg.slice(j + 2))\n          broken = true\n          break\n        } else {\n          setArg(letters[j], defaultForType(guessType(letters[j], flags)))\n        }\n      }\n\n      key = arg.slice(-1)[0]\n\n      if (!broken && key !== '-') {\n        // nargs format = '-f a b c'\n        if (checkAllAliases(key, opts.narg)) {\n          i = eatNargs(i, key, args)\n        // array format = '-f a b c'\n        } else if (checkAllAliases(key, flags.arrays) && args.length > i + 1) {\n          i = eatArray(i, key, args)\n        } else {\n          if (args[i + 1] && !/^(-|--)[^-]/.test(args[i + 1]) &&\n            !checkAllAliases(key, flags.bools) &&\n            !checkAllAliases(key, flags.counts)) {\n            setArg(key, args[i + 1])\n            i++\n          } else if (args[i + 1] && /true|false/.test(args[i + 1])) {\n            setArg(key, args[i + 1])\n            i++\n          } else {\n            setArg(key, defaultForType(guessType(key, flags)))\n          }\n        }\n      }\n    } else {\n      argv._.push(\n        flags.strings['_'] || !isNumber(arg) ? arg : Number(arg)\n      )\n    }\n  }\n\n  // order of precedence:\n  // 1. command line arg\n  // 2. value from config file\n  // 3. value from env var\n  // 4. configured default value\n  applyEnvVars(opts, argv, true) // special case: check env vars that point to config file\n  setConfig(argv)\n  applyEnvVars(opts, argv, false)\n  applyDefaultsAndAliases(argv, aliases, defaults)\n\n  Object.keys(flags.counts).forEach(function (key) {\n    setArg(key, defaults[key])\n  })\n\n  notFlags.forEach(function (key) {\n    argv._.push(key)\n  })\n\n  // how many arguments should we consume, based\n  // on the nargs option?\n  function eatNargs (i, key, args) {\n    var toEat = checkAllAliases(key, opts.narg)\n\n    if (args.length - (i + 1) < toEat) error = Error(__('Not enough arguments following: %s', key))\n\n    for (var ii = i + 1; ii < (toEat + i + 1); ii++) {\n      setArg(key, args[ii])\n    }\n\n    return (i + toEat)\n  }\n\n  // if an option is an array, eat all non-hyphenated arguments\n  // following it... YUM!\n  // e.g., --foo apple banana cat becomes [\"apple\", \"banana\", \"cat\"]\n  function eatArray (i, key, args) {\n    for (var ii = i + 1; ii < args.length; ii++) {\n      if (/^-/.test(args[ii])) break\n      i = ii\n      setArg(key, args[ii])\n    }\n\n    return i\n  }\n\n  function setArg (key, val) {\n    unsetDefaulted(key)\n\n    // handle parsing boolean arguments --foo=true --bar false.\n    if (checkAllAliases(key, flags.bools) || checkAllAliases(key, flags.counts)) {\n      if (typeof val === 'string') val = val === 'true'\n    }\n\n    if (/-/.test(key) && !(aliases[key] && aliases[key].length)) {\n      var c = camelCase(key)\n      aliases[key] = [c]\n      newAliases[c] = true\n    }\n\n    var value = !checkAllAliases(key, flags.strings) && isNumber(val) ? Number(val) : val\n\n    if (checkAllAliases(key, flags.counts)) {\n      value = increment\n    }\n\n    var splitKey = key.split('.')\n    setKey(argv, splitKey, value)\n\n    // alias references an inner-value within\n    // a dot-notation object. see #279.\n    if (~key.indexOf('.') && aliases[key]) {\n      aliases[key].forEach(function (x) {\n        x = x.split('.')\n        setKey(argv, x, value)\n      })\n    }\n\n    ;(aliases[splitKey[0]] || []).forEach(function (x) {\n      x = x.split('.')\n\n      // handle populating dot notation for both\n      // the key and its aliases.\n      if (splitKey.length > 1) {\n        var a = [].concat(splitKey)\n        a.shift() // nuke the old key.\n        x = x.concat(a)\n      }\n\n      setKey(argv, x, value)\n    })\n\n    var keys = [key].concat(aliases[key] || [])\n    for (var i = 0, l = keys.length; i < l; i++) {\n      if (flags.normalize[keys[i]]) {\n        keys.forEach(function (key) {\n          argv.__defineSetter__(key, function (v) {\n            val = path.normalize(v)\n          })\n\n          argv.__defineGetter__(key, function () {\n            return typeof val === 'string' ? path.normalize(val) : val\n          })\n        })\n        break\n      }\n    }\n  }\n\n  // set args from config.json file, this should be\n  // applied last so that defaults can be applied.\n  function setConfig (argv) {\n    var configLookup = {}\n\n    // expand defaults/aliases, in-case any happen to reference\n    // the config.json file.\n    applyDefaultsAndAliases(configLookup, aliases, defaults)\n\n    Object.keys(flags.configs).forEach(function (configKey) {\n      var configPath = argv[configKey] || configLookup[configKey]\n      if (configPath) {\n        try {\n          var config = null\n          var resolvedConfigPath = path.resolve(process.cwd(), configPath)\n\n          if (typeof flags.configs[configKey] === 'function') {\n            try {\n              config = flags.configs[configKey](resolvedConfigPath)\n            } catch (e) {\n              config = e\n            }\n            if (config instanceof Error) {\n              error = config\n              return\n            }\n          } else {\n            config = require(resolvedConfigPath)\n          }\n\n          Object.keys(config).forEach(function (key) {\n            // setting arguments via CLI takes precedence over\n            // values within the config file.\n            if (argv[key] === undefined || (flags.defaulted[key])) {\n              delete argv[key]\n              setArg(key, config[key])\n            }\n          })\n        } catch (ex) {\n          if (argv[configKey]) error = Error(__('Invalid JSON config file: %s', configPath))\n        }\n      }\n    })\n  }\n\n  function applyEnvVars (opts, argv, configOnly) {\n    if (typeof opts.envPrefix === 'undefined') return\n\n    var prefix = typeof opts.envPrefix === 'string' ? opts.envPrefix : ''\n    Object.keys(process.env).forEach(function (envVar) {\n      if (prefix === '' || envVar.lastIndexOf(prefix, 0) === 0) {\n        var key = camelCase(envVar.substring(prefix.length))\n        if (((configOnly && flags.configs[key]) || !configOnly) && (!(key in argv) || flags.defaulted[key])) {\n          setArg(key, process.env[envVar])\n        }\n      }\n    })\n  }\n\n  function applyDefaultsAndAliases (obj, aliases, defaults) {\n    Object.keys(defaults).forEach(function (key) {\n      if (!hasKey(obj, key.split('.'))) {\n        setKey(obj, key.split('.'), defaults[key])\n\n        ;(aliases[key] || []).forEach(function (x) {\n          if (hasKey(obj, x.split('.'))) return\n          setKey(obj, x.split('.'), defaults[key])\n        })\n      }\n    })\n  }\n\n  function hasKey (obj, keys) {\n    var o = obj\n    keys.slice(0, -1).forEach(function (key) {\n      o = (o[key] || {})\n    })\n\n    var key = keys[keys.length - 1]\n\n    if (typeof o !== 'object') return false\n    else return key in o\n  }\n\n  function setKey (obj, keys, value) {\n    var o = obj\n    keys.slice(0, -1).forEach(function (key) {\n      if (o[key] === undefined) o[key] = {}\n      o = o[key]\n    })\n\n    var key = keys[keys.length - 1]\n    if (value === increment) {\n      o[key] = increment(o[key])\n    } else if (o[key] === undefined && checkAllAliases(key, flags.arrays)) {\n      o[key] = Array.isArray(value) ? value : [value]\n    } else if (o[key] === undefined || typeof o[key] === 'boolean') {\n      o[key] = value\n    } else if (Array.isArray(o[key])) {\n      o[key].push(value)\n    } else {\n      o[key] = [ o[key], value ]\n    }\n  }\n\n  // extend the aliases list with inferred aliases.\n  function extendAliases (obj) {\n    Object.keys(obj || {}).forEach(function (key) {\n      // short-circuit if we've already added a key\n      // to the aliases array, for example it might\n      // exist in both 'opts.default' and 'opts.key'.\n      if (aliases[key]) return\n\n      aliases[key] = [].concat(opts.alias[key] || [])\n      // For \"--option-name\", also set argv.optionName\n      aliases[key].concat(key).forEach(function (x) {\n        if (/-/.test(x)) {\n          var c = camelCase(x)\n          aliases[key].push(c)\n          newAliases[c] = true\n        }\n      })\n      aliases[key].forEach(function (x) {\n        aliases[x] = [key].concat(aliases[key].filter(function (y) {\n          return x !== y\n        }))\n      })\n    })\n  }\n\n  // check if a flag is set for any of a key's aliases.\n  function checkAllAliases (key, flag) {\n    var isSet = false\n    var toCheck = [].concat(aliases[key] || [], key)\n\n    toCheck.forEach(function (key) {\n      if (flag[key]) isSet = flag[key]\n    })\n\n    return isSet\n  }\n\n  function setDefaulted (key) {\n    [].concat(aliases[key] || [], key).forEach(function (k) {\n      flags.defaulted[k] = true\n    })\n  }\n\n  function unsetDefaulted (key) {\n    [].concat(aliases[key] || [], key).forEach(function (k) {\n      delete flags.defaulted[k]\n    })\n  }\n\n  // return a default value, given the type of a flag.,\n  // e.g., key of type 'string' will default to '', rather than 'true'.\n  function defaultForType (type) {\n    var def = {\n      boolean: true,\n      string: '',\n      array: []\n    }\n\n    return def[type]\n  }\n\n  // given a flag, enforce a default type.\n  function guessType (key, flags) {\n    var type = 'boolean'\n\n    if (flags.strings && flags.strings[key]) type = 'string'\n    else if (flags.arrays && flags.arrays[key]) type = 'array'\n\n    return type\n  }\n\n  function isNumber (x) {\n    if (typeof x === 'number') return true\n    if (/^0x[0-9a-f]+$/i.test(x)) return true\n    return /^[-+]?(?:\\d+(?:\\.\\d*)?|\\.\\d+)(e[-+]?\\d+)?$/.test(x)\n  }\n\n  return {\n    argv: argv,\n    aliases: aliases,\n    error: error,\n    newAliases: newAliases\n  }\n}\n"]},"metadata":{},"sourceType":"script"}