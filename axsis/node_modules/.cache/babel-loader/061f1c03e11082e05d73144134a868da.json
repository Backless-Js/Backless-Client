{"ast":null,"code":"const util = require('../util');\n\nconst jsesc = require('jsesc');\n\nfunction repr(value) {\n  // In context of url parameters, don't accept nulls and such.\n  if (!value) {\n    return \"''\";\n  } else {\n    return \"'\" + jsesc(value, {\n      quotes: 'single'\n    }) + \"'\";\n  }\n}\n\nconst toDart = curlCommand => {\n  const r = util.parseCurlCommand(curlCommand);\n  let s = '';\n  if (r.auth || r.isDataBinary) s += \"import 'dart:convert';\\n\";\n  s += \"import 'package:http/http.dart' as http;\\n\" + '\\n' + 'void main() async {\\n';\n\n  if (r.auth) {\n    const splitAuth = r.auth.split(':');\n    const uname = splitAuth[0] || '';\n    const pword = splitAuth[1] || '';\n    s += \"  var uname = '\" + uname + \"';\\n\" + \"  var pword = '\" + pword + \"';\\n\" + \"  var authn = 'Basic ' + base64Encode(utf8.encode('$uname:$pword'));\\n\" + '\\n';\n  }\n\n  const hasHeaders = r.headers || r.cookies || r.compressed || r.isDataBinary || r.method === 'put';\n\n  if (hasHeaders) {\n    s += '  var headers = {\\n';\n\n    for (const hname in r.headers) s += \"    '\" + hname + \"': '\" + r.headers[hname] + \"',\\n\";\n\n    if (r.cookies) {\n      const cookiestr = util.serializeCookies(r.cookies);\n      s += \"    'Cookie': '\" + cookiestr + \"',\\n\";\n    }\n\n    if (r.auth) s += \"    'Authorization': authn,\\n\";\n    if (r.compressed) s += \"    'Accept-Encoding': 'gzip',\\n\";\n\n    if (!hasHeaders['Content-Type'] && (r.isDataBinary || r.method === 'put')) {\n      s += \"    'Content-Type': 'application/x-www-form-urlencoded',\\n\";\n    }\n\n    s += '  };\\n';\n    s += '\\n';\n  }\n\n  const hasQuery = r.query;\n\n  if (hasQuery) {\n    s += '  var params = {\\n';\n\n    for (const paramName in r.query) {\n      const rawValue = r.query[paramName];\n      let paramValue;\n\n      if (Array.isArray(rawValue)) {\n        paramValue = '[' + rawValue.map(repr).join(', ') + ']';\n      } else {\n        paramValue = repr(rawValue);\n      }\n\n      s += '    ' + repr(paramName) + ': ' + paramValue + ',\\n';\n    }\n\n    s += '  };\\n';\n    /* eslint-disable no-template-curly-in-string */\n\n    s += \"  var query = params.entries.map((p) => '${p.key}=${p.value}').join('&');\\n\";\n    s += '\\n';\n  }\n\n  const hasData = r.data;\n\n  if (typeof r.data === 'number') {\n    r.data = r.data.toString();\n  }\n\n  if (hasData) {\n    // escape single quotes if there're not already escaped\n    if (r.data.indexOf(\"'\") !== -1 && r.data.indexOf(\"\\\\'\") === -1) r.data = jsesc(r.data);\n\n    if (r.dataArray) {\n      s += '  var data = {\\n';\n\n      for (let i = 0; i !== r.dataArray.length; ++i) {\n        const kv = r.dataArray[i];\n        const splitKv = kv.replace(/\\\\\"/g, '\"').split('=');\n        const key = splitKv[0] || '';\n        const val = splitKv[1] || '';\n        s += \"    '\" + key + \"': '\" + val + \"',\\n\";\n      }\n\n      ;\n      s += '  };\\n';\n      s += '\\n';\n    } else if (r.isDataBinary) {\n      s += `  var data = utf8.encode('${r.data}');\\n\\n`;\n    } else {\n      s += `  var data = '${r.data}';\\n\\n`;\n    }\n  }\n\n  if (hasQuery) {\n    s += '  var res = await http.' + r.method + \"('\" + r.urlWithoutQuery + \"?$query'\";\n  } else {\n    s += '  var res = await http.' + r.method + \"('\" + r.url + \"'\";\n  }\n\n  if (hasHeaders) s += ', headers: headers';else if (r.auth) s += \", headers: {'Authorization': authn}\";\n  if (hasData) s += ', body: data';\n  /* eslint-disable no-template-curly-in-string */\n\n  s += ');\\n' + \"  if (res.statusCode != 200) throw Exception('http.\" + r.method + \" error: statusCode= ${res.statusCode}');\\n\" + '  print(res.body);\\n' + '}';\n  return s + '\\n';\n};\n\nmodule.exports = toDart;","map":{"version":3,"sources":["/home/marcel/Desktop/CobaProject/GUI backless-js/axsis/node_modules/curlconverter/generators/dart.js"],"names":["util","require","jsesc","repr","value","quotes","toDart","curlCommand","r","parseCurlCommand","s","auth","isDataBinary","splitAuth","split","uname","pword","hasHeaders","headers","cookies","compressed","method","hname","cookiestr","serializeCookies","hasQuery","query","paramName","rawValue","paramValue","Array","isArray","map","join","hasData","data","toString","indexOf","dataArray","i","length","kv","splitKv","replace","key","val","urlWithoutQuery","url","module","exports"],"mappings":"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","sourcesContent":["const util = require('../util')\nconst jsesc = require('jsesc')\n\nfunction repr (value) {\n  // In context of url parameters, don't accept nulls and such.\n  if (!value) {\n    return \"''\"\n  } else {\n    return \"'\" + jsesc(value, { quotes: 'single' }) + \"'\"\n  }\n}\n\nconst toDart = curlCommand => {\n  const r = util.parseCurlCommand(curlCommand)\n  let s = ''\n\n  if (r.auth || r.isDataBinary) s += \"import 'dart:convert';\\n\"\n\n  s +=\n    \"import 'package:http/http.dart' as http;\\n\" +\n    '\\n' +\n    'void main() async {\\n'\n\n  if (r.auth) {\n    const splitAuth = r.auth.split(':')\n    const uname = splitAuth[0] || ''\n    const pword = splitAuth[1] || ''\n\n    s +=\n      \"  var uname = '\" + uname + \"';\\n\" +\n      \"  var pword = '\" + pword + \"';\\n\" +\n      \"  var authn = 'Basic ' + base64Encode(utf8.encode('$uname:$pword'));\\n\" +\n      '\\n'\n  }\n\n  const hasHeaders = r.headers || r.cookies || r.compressed || r.isDataBinary || r.method === 'put'\n  if (hasHeaders) {\n    s += '  var headers = {\\n'\n    for (const hname in r.headers) s += \"    '\" + hname + \"': '\" + r.headers[hname] + \"',\\n\"\n\n    if (r.cookies) {\n      const cookiestr = util.serializeCookies(r.cookies)\n      s += \"    'Cookie': '\" + cookiestr + \"',\\n\"\n    }\n\n    if (r.auth) s += \"    'Authorization': authn,\\n\"\n    if (r.compressed) s += \"    'Accept-Encoding': 'gzip',\\n\"\n    if (!hasHeaders['Content-Type'] && (r.isDataBinary || r.method === 'put')) {\n      s += \"    'Content-Type': 'application/x-www-form-urlencoded',\\n\"\n    }\n\n    s += '  };\\n'\n    s += '\\n'\n  }\n\n  const hasQuery = r.query\n  if (hasQuery) {\n    s += '  var params = {\\n'\n    for (const paramName in r.query) {\n      const rawValue = r.query[paramName]\n      let paramValue\n      if (Array.isArray(rawValue)) {\n        paramValue = '[' + rawValue.map(repr).join(', ') + ']'\n      } else {\n        paramValue = repr(rawValue)\n      }\n      s += '    ' + repr(paramName) + ': ' + paramValue + ',\\n'\n    }\n    s += '  };\\n'\n    /* eslint-disable no-template-curly-in-string */\n    s += \"  var query = params.entries.map((p) => '${p.key}=${p.value}').join('&');\\n\"\n    s += '\\n'\n  }\n\n  const hasData = r.data\n  if (typeof r.data === 'number') {\n    r.data = r.data.toString()\n  }\n  if (hasData) {\n    // escape single quotes if there're not already escaped\n    if (r.data.indexOf(\"'\") !== -1 && r.data.indexOf(\"\\\\'\") === -1) r.data = jsesc(r.data)\n\n    if (r.dataArray) {\n      s += '  var data = {\\n'\n      for (let i = 0; i !== r.dataArray.length; ++i) {\n        const kv = r.dataArray[i]\n        const splitKv = kv.replace(/\\\\\"/g, '\"').split('=')\n        const key = splitKv[0] || ''\n        const val = splitKv[1] || ''\n        s += \"    '\" + key + \"': '\" + val + \"',\\n\"\n      };\n      s += '  };\\n'\n      s += '\\n'\n    } else if (r.isDataBinary) {\n      s += `  var data = utf8.encode('${r.data}');\\n\\n`\n    } else {\n      s += `  var data = '${r.data}';\\n\\n`\n    }\n  }\n\n  if (hasQuery) {\n    s += '  var res = await http.' + r.method + \"('\" + r.urlWithoutQuery + \"?$query'\"\n  } else {\n    s += '  var res = await http.' + r.method + \"('\" + r.url + \"'\"\n  }\n\n  if (hasHeaders) s += ', headers: headers'\n  else if (r.auth) s += \", headers: {'Authorization': authn}\"\n  if (hasData) s += ', body: data'\n\n  /* eslint-disable no-template-curly-in-string */\n  s +=\n    ');\\n' +\n    \"  if (res.statusCode != 200) throw Exception('http.\" + r.method + \" error: statusCode= ${res.statusCode}');\\n\" +\n    '  print(res.body);\\n' +\n    '}'\n\n  return s + '\\n'\n}\n\nmodule.exports = toDart\n"]},"metadata":{},"sourceType":"script"}