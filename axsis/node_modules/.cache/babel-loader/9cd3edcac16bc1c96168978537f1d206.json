{"ast":null,"code":"'use strict';\n\nconst u = require('universalify').fromCallback;\n\nconst path = require('path');\n\nconst fs = require('graceful-fs');\n\nconst mkdir = require('../mkdirs');\n\nconst pathExists = require('../path-exists').pathExists;\n\nfunction createFile(file, callback) {\n  function makeFile() {\n    fs.writeFile(file, '', err => {\n      if (err) return callback(err);\n      callback();\n    });\n  }\n\n  fs.stat(file, (err, stats) => {\n    // eslint-disable-line handle-callback-err\n    if (!err && stats.isFile()) return callback();\n    const dir = path.dirname(file);\n    pathExists(dir, (err, dirExists) => {\n      if (err) return callback(err);\n      if (dirExists) return makeFile();\n      mkdir.mkdirs(dir, err => {\n        if (err) return callback(err);\n        makeFile();\n      });\n    });\n  });\n}\n\nfunction createFileSync(file) {\n  let stats;\n\n  try {\n    stats = fs.statSync(file);\n  } catch (e) {}\n\n  if (stats && stats.isFile()) return;\n  const dir = path.dirname(file);\n\n  if (!fs.existsSync(dir)) {\n    mkdir.mkdirsSync(dir);\n  }\n\n  fs.writeFileSync(file, '');\n}\n\nmodule.exports = {\n  createFile: u(createFile),\n  createFileSync\n};","map":{"version":3,"sources":["/home/marcel/Desktop/CobaProject/GUI backless-js/axsis/node_modules/fs-extra/lib/ensure/file.js"],"names":["u","require","fromCallback","path","fs","mkdir","pathExists","createFile","file","callback","makeFile","writeFile","err","stat","stats","isFile","dir","dirname","dirExists","mkdirs","createFileSync","statSync","e","existsSync","mkdirsSync","writeFileSync","module","exports"],"mappings":"AAAA;;AAEA,MAAMA,CAAC,GAAGC,OAAO,CAAC,cAAD,CAAP,CAAwBC,YAAlC;;AACA,MAAMC,IAAI,GAAGF,OAAO,CAAC,MAAD,CAApB;;AACA,MAAMG,EAAE,GAAGH,OAAO,CAAC,aAAD,CAAlB;;AACA,MAAMI,KAAK,GAAGJ,OAAO,CAAC,WAAD,CAArB;;AACA,MAAMK,UAAU,GAAGL,OAAO,CAAC,gBAAD,CAAP,CAA0BK,UAA7C;;AAEA,SAASC,UAAT,CAAqBC,IAArB,EAA2BC,QAA3B,EAAqC;AACnC,WAASC,QAAT,GAAqB;AACnBN,IAAAA,EAAE,CAACO,SAAH,CAAaH,IAAb,EAAmB,EAAnB,EAAuBI,GAAG,IAAI;AAC5B,UAAIA,GAAJ,EAAS,OAAOH,QAAQ,CAACG,GAAD,CAAf;AACTH,MAAAA,QAAQ;AACT,KAHD;AAID;;AAEDL,EAAAA,EAAE,CAACS,IAAH,CAAQL,IAAR,EAAc,CAACI,GAAD,EAAME,KAAN,KAAgB;AAAE;AAC9B,QAAI,CAACF,GAAD,IAAQE,KAAK,CAACC,MAAN,EAAZ,EAA4B,OAAON,QAAQ,EAAf;AAC5B,UAAMO,GAAG,GAAGb,IAAI,CAACc,OAAL,CAAaT,IAAb,CAAZ;AACAF,IAAAA,UAAU,CAACU,GAAD,EAAM,CAACJ,GAAD,EAAMM,SAAN,KAAoB;AAClC,UAAIN,GAAJ,EAAS,OAAOH,QAAQ,CAACG,GAAD,CAAf;AACT,UAAIM,SAAJ,EAAe,OAAOR,QAAQ,EAAf;AACfL,MAAAA,KAAK,CAACc,MAAN,CAAaH,GAAb,EAAkBJ,GAAG,IAAI;AACvB,YAAIA,GAAJ,EAAS,OAAOH,QAAQ,CAACG,GAAD,CAAf;AACTF,QAAAA,QAAQ;AACT,OAHD;AAID,KAPS,CAAV;AAQD,GAXD;AAYD;;AAED,SAASU,cAAT,CAAyBZ,IAAzB,EAA+B;AAC7B,MAAIM,KAAJ;;AACA,MAAI;AACFA,IAAAA,KAAK,GAAGV,EAAE,CAACiB,QAAH,CAAYb,IAAZ,CAAR;AACD,GAFD,CAEE,OAAOc,CAAP,EAAU,CAAE;;AACd,MAAIR,KAAK,IAAIA,KAAK,CAACC,MAAN,EAAb,EAA6B;AAE7B,QAAMC,GAAG,GAAGb,IAAI,CAACc,OAAL,CAAaT,IAAb,CAAZ;;AACA,MAAI,CAACJ,EAAE,CAACmB,UAAH,CAAcP,GAAd,CAAL,EAAyB;AACvBX,IAAAA,KAAK,CAACmB,UAAN,CAAiBR,GAAjB;AACD;;AAEDZ,EAAAA,EAAE,CAACqB,aAAH,CAAiBjB,IAAjB,EAAuB,EAAvB;AACD;;AAEDkB,MAAM,CAACC,OAAP,GAAiB;AACfpB,EAAAA,UAAU,EAAEP,CAAC,CAACO,UAAD,CADE;AAEfa,EAAAA;AAFe,CAAjB","sourcesContent":["'use strict'\n\nconst u = require('universalify').fromCallback\nconst path = require('path')\nconst fs = require('graceful-fs')\nconst mkdir = require('../mkdirs')\nconst pathExists = require('../path-exists').pathExists\n\nfunction createFile (file, callback) {\n  function makeFile () {\n    fs.writeFile(file, '', err => {\n      if (err) return callback(err)\n      callback()\n    })\n  }\n\n  fs.stat(file, (err, stats) => { // eslint-disable-line handle-callback-err\n    if (!err && stats.isFile()) return callback()\n    const dir = path.dirname(file)\n    pathExists(dir, (err, dirExists) => {\n      if (err) return callback(err)\n      if (dirExists) return makeFile()\n      mkdir.mkdirs(dir, err => {\n        if (err) return callback(err)\n        makeFile()\n      })\n    })\n  })\n}\n\nfunction createFileSync (file) {\n  let stats\n  try {\n    stats = fs.statSync(file)\n  } catch (e) {}\n  if (stats && stats.isFile()) return\n\n  const dir = path.dirname(file)\n  if (!fs.existsSync(dir)) {\n    mkdir.mkdirsSync(dir)\n  }\n\n  fs.writeFileSync(file, '')\n}\n\nmodule.exports = {\n  createFile: u(createFile),\n  createFileSync\n}\n"]},"metadata":{},"sourceType":"script"}