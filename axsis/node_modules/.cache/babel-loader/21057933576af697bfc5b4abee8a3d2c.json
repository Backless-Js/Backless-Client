{"ast":null,"code":"'use strict';\n\nconst fs = require('graceful-fs');\n\nconst path = require('path');\n\nconst mkdirp = require('../mkdirs').mkdirs;\n\nconst pathExists = require('../path-exists').pathExists;\n\nconst utimes = require('../util/utimes').utimesMillis;\n\nconst stat = require('../util/stat');\n\nfunction copy(src, dest, opts, cb) {\n  if (typeof opts === 'function' && !cb) {\n    cb = opts;\n    opts = {};\n  } else if (typeof opts === 'function') {\n    opts = {\n      filter: opts\n    };\n  }\n\n  cb = cb || function () {};\n\n  opts = opts || {};\n  opts.clobber = 'clobber' in opts ? !!opts.clobber : true; // default to true for now\n\n  opts.overwrite = 'overwrite' in opts ? !!opts.overwrite : opts.clobber; // overwrite falls back to clobber\n  // Warn about using preserveTimestamps on 32-bit node\n\n  if (opts.preserveTimestamps && process.arch === 'ia32') {\n    console.warn(`fs-extra: Using the preserveTimestamps option in 32-bit node is not recommended;\\n\n    see https://github.com/jprichardson/node-fs-extra/issues/269`);\n  }\n\n  stat.checkPaths(src, dest, 'copy', (err, stats) => {\n    if (err) return cb(err);\n    const {\n      srcStat,\n      destStat\n    } = stats;\n    stat.checkParentPaths(src, srcStat, dest, 'copy', err => {\n      if (err) return cb(err);\n      if (opts.filter) return handleFilter(checkParentDir, destStat, src, dest, opts, cb);\n      return checkParentDir(destStat, src, dest, opts, cb);\n    });\n  });\n}\n\nfunction checkParentDir(destStat, src, dest, opts, cb) {\n  const destParent = path.dirname(dest);\n  pathExists(destParent, (err, dirExists) => {\n    if (err) return cb(err);\n    if (dirExists) return startCopy(destStat, src, dest, opts, cb);\n    mkdirp(destParent, err => {\n      if (err) return cb(err);\n      return startCopy(destStat, src, dest, opts, cb);\n    });\n  });\n}\n\nfunction handleFilter(onInclude, destStat, src, dest, opts, cb) {\n  Promise.resolve(opts.filter(src, dest)).then(include => {\n    if (include) return onInclude(destStat, src, dest, opts, cb);\n    return cb();\n  }, error => cb(error));\n}\n\nfunction startCopy(destStat, src, dest, opts, cb) {\n  if (opts.filter) return handleFilter(getStats, destStat, src, dest, opts, cb);\n  return getStats(destStat, src, dest, opts, cb);\n}\n\nfunction getStats(destStat, src, dest, opts, cb) {\n  const stat = opts.dereference ? fs.stat : fs.lstat;\n  stat(src, (err, srcStat) => {\n    if (err) return cb(err);\n    if (srcStat.isDirectory()) return onDir(srcStat, destStat, src, dest, opts, cb);else if (srcStat.isFile() || srcStat.isCharacterDevice() || srcStat.isBlockDevice()) return onFile(srcStat, destStat, src, dest, opts, cb);else if (srcStat.isSymbolicLink()) return onLink(destStat, src, dest, opts, cb);\n  });\n}\n\nfunction onFile(srcStat, destStat, src, dest, opts, cb) {\n  if (!destStat) return copyFile(srcStat, src, dest, opts, cb);\n  return mayCopyFile(srcStat, src, dest, opts, cb);\n}\n\nfunction mayCopyFile(srcStat, src, dest, opts, cb) {\n  if (opts.overwrite) {\n    fs.unlink(dest, err => {\n      if (err) return cb(err);\n      return copyFile(srcStat, src, dest, opts, cb);\n    });\n  } else if (opts.errorOnExist) {\n    return cb(new Error(`'${dest}' already exists`));\n  } else return cb();\n}\n\nfunction copyFile(srcStat, src, dest, opts, cb) {\n  if (typeof fs.copyFile === 'function') {\n    return fs.copyFile(src, dest, err => {\n      if (err) return cb(err);\n      return setDestModeAndTimestamps(srcStat, dest, opts, cb);\n    });\n  }\n\n  return copyFileFallback(srcStat, src, dest, opts, cb);\n}\n\nfunction copyFileFallback(srcStat, src, dest, opts, cb) {\n  const rs = fs.createReadStream(src);\n  rs.on('error', err => cb(err)).once('open', () => {\n    const ws = fs.createWriteStream(dest, {\n      mode: srcStat.mode\n    });\n    ws.on('error', err => cb(err)).on('open', () => rs.pipe(ws)).once('close', () => setDestModeAndTimestamps(srcStat, dest, opts, cb));\n  });\n}\n\nfunction setDestModeAndTimestamps(srcStat, dest, opts, cb) {\n  fs.chmod(dest, srcStat.mode, err => {\n    if (err) return cb(err);\n\n    if (opts.preserveTimestamps) {\n      return utimes(dest, srcStat.atime, srcStat.mtime, cb);\n    }\n\n    return cb();\n  });\n}\n\nfunction onDir(srcStat, destStat, src, dest, opts, cb) {\n  if (!destStat) return mkDirAndCopy(srcStat, src, dest, opts, cb);\n\n  if (destStat && !destStat.isDirectory()) {\n    return cb(new Error(`Cannot overwrite non-directory '${dest}' with directory '${src}'.`));\n  }\n\n  return copyDir(src, dest, opts, cb);\n}\n\nfunction mkDirAndCopy(srcStat, src, dest, opts, cb) {\n  fs.mkdir(dest, err => {\n    if (err) return cb(err);\n    copyDir(src, dest, opts, err => {\n      if (err) return cb(err);\n      return fs.chmod(dest, srcStat.mode, cb);\n    });\n  });\n}\n\nfunction copyDir(src, dest, opts, cb) {\n  fs.readdir(src, (err, items) => {\n    if (err) return cb(err);\n    return copyDirItems(items, src, dest, opts, cb);\n  });\n}\n\nfunction copyDirItems(items, src, dest, opts, cb) {\n  const item = items.pop();\n  if (!item) return cb();\n  return copyDirItem(items, item, src, dest, opts, cb);\n}\n\nfunction copyDirItem(items, item, src, dest, opts, cb) {\n  const srcItem = path.join(src, item);\n  const destItem = path.join(dest, item);\n  stat.checkPaths(srcItem, destItem, 'copy', (err, stats) => {\n    if (err) return cb(err);\n    const {\n      destStat\n    } = stats;\n    startCopy(destStat, srcItem, destItem, opts, err => {\n      if (err) return cb(err);\n      return copyDirItems(items, src, dest, opts, cb);\n    });\n  });\n}\n\nfunction onLink(destStat, src, dest, opts, cb) {\n  fs.readlink(src, (err, resolvedSrc) => {\n    if (err) return cb(err);\n\n    if (opts.dereference) {\n      resolvedSrc = path.resolve(process.cwd(), resolvedSrc);\n    }\n\n    if (!destStat) {\n      return fs.symlink(resolvedSrc, dest, cb);\n    } else {\n      fs.readlink(dest, (err, resolvedDest) => {\n        if (err) {\n          // dest exists and is a regular file or directory,\n          // Windows may throw UNKNOWN error. If dest already exists,\n          // fs throws error anyway, so no need to guard against it here.\n          if (err.code === 'EINVAL' || err.code === 'UNKNOWN') return fs.symlink(resolvedSrc, dest, cb);\n          return cb(err);\n        }\n\n        if (opts.dereference) {\n          resolvedDest = path.resolve(process.cwd(), resolvedDest);\n        }\n\n        if (stat.isSrcSubdir(resolvedSrc, resolvedDest)) {\n          return cb(new Error(`Cannot copy '${resolvedSrc}' to a subdirectory of itself, '${resolvedDest}'.`));\n        } // do not copy if src is a subdir of dest since unlinking\n        // dest in this case would result in removing src contents\n        // and therefore a broken symlink would be created.\n\n\n        if (destStat.isDirectory() && stat.isSrcSubdir(resolvedDest, resolvedSrc)) {\n          return cb(new Error(`Cannot overwrite '${resolvedDest}' with '${resolvedSrc}'.`));\n        }\n\n        return copyLink(resolvedSrc, dest, cb);\n      });\n    }\n  });\n}\n\nfunction copyLink(resolvedSrc, dest, cb) {\n  fs.unlink(dest, err => {\n    if (err) return cb(err);\n    return fs.symlink(resolvedSrc, dest, cb);\n  });\n}\n\nmodule.exports = copy;","map":{"version":3,"sources":["/home/marcel/Desktop/CobaProject/GUI backless-js/axsis/node_modules/fs-extra/lib/copy/copy.js"],"names":["fs","require","path","mkdirp","mkdirs","pathExists","utimes","utimesMillis","stat","copy","src","dest","opts","cb","filter","clobber","overwrite","preserveTimestamps","process","arch","console","warn","checkPaths","err","stats","srcStat","destStat","checkParentPaths","handleFilter","checkParentDir","destParent","dirname","dirExists","startCopy","onInclude","Promise","resolve","then","include","error","getStats","dereference","lstat","isDirectory","onDir","isFile","isCharacterDevice","isBlockDevice","onFile","isSymbolicLink","onLink","copyFile","mayCopyFile","unlink","errorOnExist","Error","setDestModeAndTimestamps","copyFileFallback","rs","createReadStream","on","once","ws","createWriteStream","mode","pipe","chmod","atime","mtime","mkDirAndCopy","copyDir","mkdir","readdir","items","copyDirItems","item","pop","copyDirItem","srcItem","join","destItem","readlink","resolvedSrc","cwd","symlink","resolvedDest","code","isSrcSubdir","copyLink","module","exports"],"mappings":"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","sourcesContent":["'use strict'\n\nconst fs = require('graceful-fs')\nconst path = require('path')\nconst mkdirp = require('../mkdirs').mkdirs\nconst pathExists = require('../path-exists').pathExists\nconst utimes = require('../util/utimes').utimesMillis\nconst stat = require('../util/stat')\n\nfunction copy (src, dest, opts, cb) {\n  if (typeof opts === 'function' && !cb) {\n    cb = opts\n    opts = {}\n  } else if (typeof opts === 'function') {\n    opts = { filter: opts }\n  }\n\n  cb = cb || function () {}\n  opts = opts || {}\n\n  opts.clobber = 'clobber' in opts ? !!opts.clobber : true // default to true for now\n  opts.overwrite = 'overwrite' in opts ? !!opts.overwrite : opts.clobber // overwrite falls back to clobber\n\n  // Warn about using preserveTimestamps on 32-bit node\n  if (opts.preserveTimestamps && process.arch === 'ia32') {\n    console.warn(`fs-extra: Using the preserveTimestamps option in 32-bit node is not recommended;\\n\n    see https://github.com/jprichardson/node-fs-extra/issues/269`)\n  }\n\n  stat.checkPaths(src, dest, 'copy', (err, stats) => {\n    if (err) return cb(err)\n    const { srcStat, destStat } = stats\n    stat.checkParentPaths(src, srcStat, dest, 'copy', err => {\n      if (err) return cb(err)\n      if (opts.filter) return handleFilter(checkParentDir, destStat, src, dest, opts, cb)\n      return checkParentDir(destStat, src, dest, opts, cb)\n    })\n  })\n}\n\nfunction checkParentDir (destStat, src, dest, opts, cb) {\n  const destParent = path.dirname(dest)\n  pathExists(destParent, (err, dirExists) => {\n    if (err) return cb(err)\n    if (dirExists) return startCopy(destStat, src, dest, opts, cb)\n    mkdirp(destParent, err => {\n      if (err) return cb(err)\n      return startCopy(destStat, src, dest, opts, cb)\n    })\n  })\n}\n\nfunction handleFilter (onInclude, destStat, src, dest, opts, cb) {\n  Promise.resolve(opts.filter(src, dest)).then(include => {\n    if (include) return onInclude(destStat, src, dest, opts, cb)\n    return cb()\n  }, error => cb(error))\n}\n\nfunction startCopy (destStat, src, dest, opts, cb) {\n  if (opts.filter) return handleFilter(getStats, destStat, src, dest, opts, cb)\n  return getStats(destStat, src, dest, opts, cb)\n}\n\nfunction getStats (destStat, src, dest, opts, cb) {\n  const stat = opts.dereference ? fs.stat : fs.lstat\n  stat(src, (err, srcStat) => {\n    if (err) return cb(err)\n\n    if (srcStat.isDirectory()) return onDir(srcStat, destStat, src, dest, opts, cb)\n    else if (srcStat.isFile() ||\n             srcStat.isCharacterDevice() ||\n             srcStat.isBlockDevice()) return onFile(srcStat, destStat, src, dest, opts, cb)\n    else if (srcStat.isSymbolicLink()) return onLink(destStat, src, dest, opts, cb)\n  })\n}\n\nfunction onFile (srcStat, destStat, src, dest, opts, cb) {\n  if (!destStat) return copyFile(srcStat, src, dest, opts, cb)\n  return mayCopyFile(srcStat, src, dest, opts, cb)\n}\n\nfunction mayCopyFile (srcStat, src, dest, opts, cb) {\n  if (opts.overwrite) {\n    fs.unlink(dest, err => {\n      if (err) return cb(err)\n      return copyFile(srcStat, src, dest, opts, cb)\n    })\n  } else if (opts.errorOnExist) {\n    return cb(new Error(`'${dest}' already exists`))\n  } else return cb()\n}\n\nfunction copyFile (srcStat, src, dest, opts, cb) {\n  if (typeof fs.copyFile === 'function') {\n    return fs.copyFile(src, dest, err => {\n      if (err) return cb(err)\n      return setDestModeAndTimestamps(srcStat, dest, opts, cb)\n    })\n  }\n  return copyFileFallback(srcStat, src, dest, opts, cb)\n}\n\nfunction copyFileFallback (srcStat, src, dest, opts, cb) {\n  const rs = fs.createReadStream(src)\n  rs.on('error', err => cb(err)).once('open', () => {\n    const ws = fs.createWriteStream(dest, { mode: srcStat.mode })\n    ws.on('error', err => cb(err))\n      .on('open', () => rs.pipe(ws))\n      .once('close', () => setDestModeAndTimestamps(srcStat, dest, opts, cb))\n  })\n}\n\nfunction setDestModeAndTimestamps (srcStat, dest, opts, cb) {\n  fs.chmod(dest, srcStat.mode, err => {\n    if (err) return cb(err)\n    if (opts.preserveTimestamps) {\n      return utimes(dest, srcStat.atime, srcStat.mtime, cb)\n    }\n    return cb()\n  })\n}\n\nfunction onDir (srcStat, destStat, src, dest, opts, cb) {\n  if (!destStat) return mkDirAndCopy(srcStat, src, dest, opts, cb)\n  if (destStat && !destStat.isDirectory()) {\n    return cb(new Error(`Cannot overwrite non-directory '${dest}' with directory '${src}'.`))\n  }\n  return copyDir(src, dest, opts, cb)\n}\n\nfunction mkDirAndCopy (srcStat, src, dest, opts, cb) {\n  fs.mkdir(dest, err => {\n    if (err) return cb(err)\n    copyDir(src, dest, opts, err => {\n      if (err) return cb(err)\n      return fs.chmod(dest, srcStat.mode, cb)\n    })\n  })\n}\n\nfunction copyDir (src, dest, opts, cb) {\n  fs.readdir(src, (err, items) => {\n    if (err) return cb(err)\n    return copyDirItems(items, src, dest, opts, cb)\n  })\n}\n\nfunction copyDirItems (items, src, dest, opts, cb) {\n  const item = items.pop()\n  if (!item) return cb()\n  return copyDirItem(items, item, src, dest, opts, cb)\n}\n\nfunction copyDirItem (items, item, src, dest, opts, cb) {\n  const srcItem = path.join(src, item)\n  const destItem = path.join(dest, item)\n  stat.checkPaths(srcItem, destItem, 'copy', (err, stats) => {\n    if (err) return cb(err)\n    const { destStat } = stats\n    startCopy(destStat, srcItem, destItem, opts, err => {\n      if (err) return cb(err)\n      return copyDirItems(items, src, dest, opts, cb)\n    })\n  })\n}\n\nfunction onLink (destStat, src, dest, opts, cb) {\n  fs.readlink(src, (err, resolvedSrc) => {\n    if (err) return cb(err)\n    if (opts.dereference) {\n      resolvedSrc = path.resolve(process.cwd(), resolvedSrc)\n    }\n\n    if (!destStat) {\n      return fs.symlink(resolvedSrc, dest, cb)\n    } else {\n      fs.readlink(dest, (err, resolvedDest) => {\n        if (err) {\n          // dest exists and is a regular file or directory,\n          // Windows may throw UNKNOWN error. If dest already exists,\n          // fs throws error anyway, so no need to guard against it here.\n          if (err.code === 'EINVAL' || err.code === 'UNKNOWN') return fs.symlink(resolvedSrc, dest, cb)\n          return cb(err)\n        }\n        if (opts.dereference) {\n          resolvedDest = path.resolve(process.cwd(), resolvedDest)\n        }\n        if (stat.isSrcSubdir(resolvedSrc, resolvedDest)) {\n          return cb(new Error(`Cannot copy '${resolvedSrc}' to a subdirectory of itself, '${resolvedDest}'.`))\n        }\n\n        // do not copy if src is a subdir of dest since unlinking\n        // dest in this case would result in removing src contents\n        // and therefore a broken symlink would be created.\n        if (destStat.isDirectory() && stat.isSrcSubdir(resolvedDest, resolvedSrc)) {\n          return cb(new Error(`Cannot overwrite '${resolvedDest}' with '${resolvedSrc}'.`))\n        }\n        return copyLink(resolvedSrc, dest, cb)\n      })\n    }\n  })\n}\n\nfunction copyLink (resolvedSrc, dest, cb) {\n  fs.unlink(dest, err => {\n    if (err) return cb(err)\n    return fs.symlink(resolvedSrc, dest, cb)\n  })\n}\n\nmodule.exports = copy\n"]},"metadata":{},"sourceType":"script"}