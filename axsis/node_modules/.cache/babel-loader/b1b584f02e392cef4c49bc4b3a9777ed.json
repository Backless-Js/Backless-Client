{"ast":null,"code":"'use strict';\n\nconst fs = require('graceful-fs');\n\nfunction symlinkType(srcpath, type, callback) {\n  callback = typeof type === 'function' ? type : callback;\n  type = typeof type === 'function' ? false : type;\n  if (type) return callback(null, type);\n  fs.lstat(srcpath, (err, stats) => {\n    if (err) return callback(null, 'file');\n    type = stats && stats.isDirectory() ? 'dir' : 'file';\n    callback(null, type);\n  });\n}\n\nfunction symlinkTypeSync(srcpath, type) {\n  let stats;\n  if (type) return type;\n\n  try {\n    stats = fs.lstatSync(srcpath);\n  } catch (e) {\n    return 'file';\n  }\n\n  return stats && stats.isDirectory() ? 'dir' : 'file';\n}\n\nmodule.exports = {\n  symlinkType,\n  symlinkTypeSync\n};","map":{"version":3,"sources":["/home/marcel/Desktop/CobaProject/GUI backless-js/axsis/node_modules/fs-extra/lib/ensure/symlink-type.js"],"names":["fs","require","symlinkType","srcpath","type","callback","lstat","err","stats","isDirectory","symlinkTypeSync","lstatSync","e","module","exports"],"mappings":"AAAA;;AAEA,MAAMA,EAAE,GAAGC,OAAO,CAAC,aAAD,CAAlB;;AAEA,SAASC,WAAT,CAAsBC,OAAtB,EAA+BC,IAA/B,EAAqCC,QAArC,EAA+C;AAC7CA,EAAAA,QAAQ,GAAI,OAAOD,IAAP,KAAgB,UAAjB,GAA+BA,IAA/B,GAAsCC,QAAjD;AACAD,EAAAA,IAAI,GAAI,OAAOA,IAAP,KAAgB,UAAjB,GAA+B,KAA/B,GAAuCA,IAA9C;AACA,MAAIA,IAAJ,EAAU,OAAOC,QAAQ,CAAC,IAAD,EAAOD,IAAP,CAAf;AACVJ,EAAAA,EAAE,CAACM,KAAH,CAASH,OAAT,EAAkB,CAACI,GAAD,EAAMC,KAAN,KAAgB;AAChC,QAAID,GAAJ,EAAS,OAAOF,QAAQ,CAAC,IAAD,EAAO,MAAP,CAAf;AACTD,IAAAA,IAAI,GAAII,KAAK,IAAIA,KAAK,CAACC,WAAN,EAAV,GAAiC,KAAjC,GAAyC,MAAhD;AACAJ,IAAAA,QAAQ,CAAC,IAAD,EAAOD,IAAP,CAAR;AACD,GAJD;AAKD;;AAED,SAASM,eAAT,CAA0BP,OAA1B,EAAmCC,IAAnC,EAAyC;AACvC,MAAII,KAAJ;AAEA,MAAIJ,IAAJ,EAAU,OAAOA,IAAP;;AACV,MAAI;AACFI,IAAAA,KAAK,GAAGR,EAAE,CAACW,SAAH,CAAaR,OAAb,CAAR;AACD,GAFD,CAEE,OAAOS,CAAP,EAAU;AACV,WAAO,MAAP;AACD;;AACD,SAAQJ,KAAK,IAAIA,KAAK,CAACC,WAAN,EAAV,GAAiC,KAAjC,GAAyC,MAAhD;AACD;;AAEDI,MAAM,CAACC,OAAP,GAAiB;AACfZ,EAAAA,WADe;AAEfQ,EAAAA;AAFe,CAAjB","sourcesContent":["'use strict'\n\nconst fs = require('graceful-fs')\n\nfunction symlinkType (srcpath, type, callback) {\n  callback = (typeof type === 'function') ? type : callback\n  type = (typeof type === 'function') ? false : type\n  if (type) return callback(null, type)\n  fs.lstat(srcpath, (err, stats) => {\n    if (err) return callback(null, 'file')\n    type = (stats && stats.isDirectory()) ? 'dir' : 'file'\n    callback(null, type)\n  })\n}\n\nfunction symlinkTypeSync (srcpath, type) {\n  let stats\n\n  if (type) return type\n  try {\n    stats = fs.lstatSync(srcpath)\n  } catch (e) {\n    return 'file'\n  }\n  return (stats && stats.isDirectory()) ? 'dir' : 'file'\n}\n\nmodule.exports = {\n  symlinkType,\n  symlinkTypeSync\n}\n"]},"metadata":{},"sourceType":"script"}