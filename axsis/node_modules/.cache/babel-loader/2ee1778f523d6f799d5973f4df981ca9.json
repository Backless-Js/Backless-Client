{"ast":null,"code":"\"use strict\";\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : new P(function (resolve) {\n        resolve(result.value);\n      }).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n    label: 0,\n    sent: function () {\n      if (t[0] & 1) throw t[1];\n      return t[1];\n    },\n    trys: [],\n    ops: []\n  },\n      f,\n      y,\n      t,\n      g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n\n    while (_) try {\n      if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n      if (y = 0, t) op = [op[0] & 2, t.value];\n\n      switch (op[0]) {\n        case 0:\n        case 1:\n          t = op;\n          break;\n\n        case 4:\n          _.label++;\n          return {\n            value: op[1],\n            done: false\n          };\n\n        case 5:\n          _.label++;\n          y = op[1];\n          op = [0];\n          continue;\n\n        case 7:\n          op = _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n\n        default:\n          if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n            _ = 0;\n            continue;\n          }\n\n          if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n            _.label = op[1];\n            break;\n          }\n\n          if (op[0] === 6 && _.label < t[1]) {\n            _.label = t[1];\n            t = op;\n            break;\n          }\n\n          if (t && _.label < t[2]) {\n            _.label = t[2];\n\n            _.ops.push(op);\n\n            break;\n          }\n\n          if (t[2]) _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n      }\n\n      op = body.call(thisArg, _);\n    } catch (e) {\n      op = [6, e];\n      y = 0;\n    } finally {\n      f = t = 0;\n    }\n\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nvar _this = this;\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar axios_1 = __importDefault(require(\"axios\"));\n/**\n * Default constants\n */\n\n\nvar BASE_URL = 'https://raw.githubusercontent.com/';\nvar DEFAULT_BRANCH = 'master';\nvar DEFAULT_README_FILE = 'README.md';\nvar NOT_FOUND_README = '404 - Unable to find a readme.md.';\nvar INVALID_CONFIGURATION = 'Invalid configuration object.';\n/**\n * Get an axios instance for convenience and to avoid\n * using the base url multiple times when building a request.\n */\n\nvar axiosInstance = axios_1.default.create({\n  baseURL: BASE_URL\n});\n/**\n * Resolves a promise that contains the contents\n * for the request made to the readme.md file.\n *\n * @param {object:IFetchReadmeConfig} config The fetch-readme configuration object.\n */\n\nvar getGithubReadmeForRepository = function (config) {\n  return __awaiter(_this, void 0, void 0, function () {\n    var result, error_1;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          _a.trys.push([0, 2,, 3]);\n\n          return [4\n          /*yield*/\n          , axiosInstance.get(config.username + '/' + config.repository + '/' + config.branch + '/' + config.readme)];\n\n        case 1:\n          result = _a.sent();\n          return [2\n          /*return*/\n          , result.data];\n\n        case 2:\n          error_1 = _a.sent();\n          throw new Error(NOT_FOUND_README);\n\n        case 3:\n          return [2\n          /*return*/\n          ];\n      }\n    });\n  });\n};\n/**\n * Validates the received configuration object\n * Searches for the required properties and\n * applies defaults to non-present and not required properties.\n *\n * @param {object:IFetchReadmeConfig} config The configuration object.\n */\n\n\nfunction validateConfigurationObject(config) {\n  var username = config.username,\n      repository = config.repository;\n\n  if (!username || !repository) {\n    throw new Error(INVALID_CONFIGURATION);\n  }\n\n  config.branch = config.branch ? config.branch : DEFAULT_BRANCH;\n  config.readme = config.readme ? config.readme : DEFAULT_README_FILE;\n}\n/**\n * Returns a raw readme file\n * for the provided public github repository.\n *\n * @param {object:IFetchReadmeConfig} config The fetch-readme configuration object.\n */\n\n\nvar fetchReadme = function (config) {\n  return __awaiter(_this, void 0, void 0, function () {\n    var error_2;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          _a.trys.push([0, 2,, 3]); // Check configuration before proceeding\n\n\n          validateConfigurationObject(config);\n          return [4\n          /*yield*/\n          , getGithubReadmeForRepository(config)];\n\n        case 1:\n          return [2\n          /*return*/\n          , _a.sent()];\n\n        case 2:\n          error_2 = _a.sent();\n          throw error_2.message;\n\n        case 3:\n          return [2\n          /*return*/\n          ];\n      }\n    });\n  });\n};\n\nexports.fetchReadme = fetchReadme;","map":{"version":3,"sources":["../src/index.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,IAAA,KAAA,GAAA,IAAA;;;;;;AAAA,IAAA,OAAA,GAAA,eAAA,CAAA,OAAA,CAAA,OAAA,CAAA,CAAA;AAEA;;;;;AAGA,IAAM,QAAQ,GAAG,oCAAjB;AACA,IAAM,cAAc,GAAG,QAAvB;AACA,IAAM,mBAAmB,GAAG,WAA5B;AACA,IAAM,gBAAgB,GAAG,mCAAzB;AACA,IAAM,qBAAqB,GAAG,+BAA9B;AAYA;;;;;AAIA,IAAM,aAAa,GAAG,OAAA,CAAA,OAAA,CAAM,MAAN,CAAa;AACjC,EAAA,OAAO,EAAE;AADwB,CAAb,CAAtB;AAIA;;;;;;;AAMA,IAAM,4BAA4B,GAAG,UAAO,MAAP,EAAiC;AAAA,SAAA,SAAA,CAAA,KAAA,EAAA,KAAA,CAAA,EAAA,KAAA,CAAA,EAAA,YAAA;;;;;;;AAEnD,iBAAA,CAAA;AAAA;AAAA,YAAM,aAAa,CAAC,GAAd,CACnB,MAAM,CAAC,QAAP,GACE,GADF,GAEE,MAAM,CAAC,UAFT,GAGE,GAHF,GAIE,MAAM,CAAC,MAJT,GAKE,GALF,GAME,MAAM,CAAC,MAPU,CAAN,CAAA;;;AAAT,UAAA,MAAM,GAAG,EAAA,CAAA,IAAA,EAAT;AASN,iBAAA,CAAA;AAAA;AAAA,YAAO,MAAM,CAAC,IAAd,CAAA;;;;AAEA,gBAAM,IAAI,KAAJ,CAAU,gBAAV,CAAN;;;;;;;;GAbkE,CAAA;AAerE,CAfD;AAiBA;;;;;;;;;AAOA,SAAS,2BAAT,CAAqC,MAArC,EAA+D;AACrD,MAAA,QAAA,GAAA,MAAA,CAAA,QAAA;AAAA,MAAU,UAAA,GAAA,MAAA,CAAA,UAAV;;AACR,MAAI,CAAC,QAAD,IAAa,CAAC,UAAlB,EAA8B;AAC5B,UAAM,IAAI,KAAJ,CAAU,qBAAV,CAAN;AACD;;AACD,EAAA,MAAM,CAAC,MAAP,GAAgB,MAAM,CAAC,MAAP,GAAgB,MAAM,CAAC,MAAvB,GAAgC,cAAhD;AACA,EAAA,MAAM,CAAC,MAAP,GAAgB,MAAM,CAAC,MAAP,GAAgB,MAAM,CAAC,MAAvB,GAAgC,mBAAhD;AACD;AAED;;;;;;;;AAMA,IAAM,WAAW,GAAG,UAAO,MAAP,EAAiC;AAAA,SAAA,SAAA,CAAA,KAAA,EAAA,KAAA,CAAA,EAAA,KAAA,CAAA,EAAA,YAAA;;;;;oCAEjD;;;AACA,UAAA,2BAA2B,CAAC,MAAD,CAA3B;AACO,iBAAA,CAAA;AAAA;AAAA,YAAM,4BAA4B,CAAC,MAAD,CAAlC,CAAA;;;AAAP,iBAAA,CAAA;AAAA;AAAA,YAAO,EAAA,CAAA,IAAA,EAAP,CAAA;;;;AAEA,gBAAM,OAAK,CAAC,OAAZ;;;;;;;;GANiD,CAAA;AAQpD,CARD;;AAUS,OAAA,CAAA,WAAA,GAAA,WAAA","sourceRoot":"","sourcesContent":["\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nvar _this = this;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar axios_1 = __importDefault(require(\"axios\"));\n/**\n * Default constants\n */\nvar BASE_URL = 'https://raw.githubusercontent.com/';\nvar DEFAULT_BRANCH = 'master';\nvar DEFAULT_README_FILE = 'README.md';\nvar NOT_FOUND_README = '404 - Unable to find a readme.md.';\nvar INVALID_CONFIGURATION = 'Invalid configuration object.';\n/**\n * Get an axios instance for convenience and to avoid\n * using the base url multiple times when building a request.\n */\nvar axiosInstance = axios_1.default.create({\n    baseURL: BASE_URL,\n});\n/**\n * Resolves a promise that contains the contents\n * for the request made to the readme.md file.\n *\n * @param {object:IFetchReadmeConfig} config The fetch-readme configuration object.\n */\nvar getGithubReadmeForRepository = function (config) { return __awaiter(_this, void 0, void 0, function () {\n    var result, error_1;\n    return __generator(this, function (_a) {\n        switch (_a.label) {\n            case 0:\n                _a.trys.push([0, 2, , 3]);\n                return [4 /*yield*/, axiosInstance.get(config.username +\n                        '/' +\n                        config.repository +\n                        '/' +\n                        config.branch +\n                        '/' +\n                        config.readme)];\n            case 1:\n                result = _a.sent();\n                return [2 /*return*/, result.data];\n            case 2:\n                error_1 = _a.sent();\n                throw new Error(NOT_FOUND_README);\n            case 3: return [2 /*return*/];\n        }\n    });\n}); };\n/**\n * Validates the received configuration object\n * Searches for the required properties and\n * applies defaults to non-present and not required properties.\n *\n * @param {object:IFetchReadmeConfig} config The configuration object.\n */\nfunction validateConfigurationObject(config) {\n    var username = config.username, repository = config.repository;\n    if (!username || !repository) {\n        throw new Error(INVALID_CONFIGURATION);\n    }\n    config.branch = config.branch ? config.branch : DEFAULT_BRANCH;\n    config.readme = config.readme ? config.readme : DEFAULT_README_FILE;\n}\n/**\n * Returns a raw readme file\n * for the provided public github repository.\n *\n * @param {object:IFetchReadmeConfig} config The fetch-readme configuration object.\n */\nvar fetchReadme = function (config) { return __awaiter(_this, void 0, void 0, function () {\n    var error_2;\n    return __generator(this, function (_a) {\n        switch (_a.label) {\n            case 0:\n                _a.trys.push([0, 2, , 3]);\n                // Check configuration before proceeding\n                validateConfigurationObject(config);\n                return [4 /*yield*/, getGithubReadmeForRepository(config)];\n            case 1: return [2 /*return*/, _a.sent()];\n            case 2:\n                error_2 = _a.sent();\n                throw error_2.message;\n            case 3: return [2 /*return*/];\n        }\n    });\n}); };\nexports.fetchReadme = fetchReadme;\n//# sourceMappingURL=index.js.map"]},"metadata":{},"sourceType":"script"}