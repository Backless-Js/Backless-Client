{"ast":null,"code":"// validation-type-stuff, missing params,\n// bad implications, custom checks.\nmodule.exports = function (yargs, usage, y18n) {\n  var __ = y18n.__;\n  var __n = y18n.__n;\n  var self = {}; // validate appropriate # of non-option\n  // arguments were provided, i.e., '_'.\n\n  self.nonOptionCount = function (argv) {\n    var demanded = yargs.getDemanded();\n    var _s = argv._.length;\n\n    if (demanded._ && (_s < demanded._.count || _s > demanded._.max)) {\n      if (demanded._.msg !== undefined) {\n        usage.fail(demanded._.msg);\n      } else if (_s < demanded._.count) {\n        usage.fail(__('Not enough non-option arguments: got %s, need at least %s', argv._.length, demanded._.count));\n      } else {\n        usage.fail(__('Too many non-option arguments: got %s, maximum of %s', argv._.length, demanded._.max));\n      }\n    }\n  }; // make sure that any args that require an\n  // value (--foo=bar), have a value.\n\n\n  self.missingArgumentValue = function (argv) {\n    var defaultValues = [true, false, ''];\n    var options = yargs.getOptions();\n\n    if (options.requiresArg.length > 0) {\n      var missingRequiredArgs = [];\n      options.requiresArg.forEach(function (key) {\n        var value = argv[key]; // if a value is explicitly requested,\n        // flag argument as missing if it does not\n        // look like foo=bar was entered.\n\n        if (~defaultValues.indexOf(value) || Array.isArray(value) && !value.length) {\n          missingRequiredArgs.push(key);\n        }\n      });\n\n      if (missingRequiredArgs.length > 0) {\n        usage.fail(__n('Missing argument value: %s', 'Missing argument values: %s', missingRequiredArgs.length, missingRequiredArgs.join(', ')));\n      }\n    }\n  }; // make sure all the required arguments are present.\n\n\n  self.requiredArguments = function (argv) {\n    var demanded = yargs.getDemanded();\n    var missing = null;\n    Object.keys(demanded).forEach(function (key) {\n      if (!argv.hasOwnProperty(key)) {\n        missing = missing || {};\n        missing[key] = demanded[key];\n      }\n    });\n\n    if (missing) {\n      var customMsgs = [];\n      Object.keys(missing).forEach(function (key) {\n        var msg = missing[key].msg;\n\n        if (msg && customMsgs.indexOf(msg) < 0) {\n          customMsgs.push(msg);\n        }\n      });\n      var customMsg = customMsgs.length ? '\\n' + customMsgs.join('\\n') : '';\n      usage.fail(__n('Missing required argument: %s', 'Missing required arguments: %s', Object.keys(missing).length, Object.keys(missing).join(', ') + customMsg));\n    }\n  }; // check for unknown arguments (strict-mode).\n\n\n  self.unknownArguments = function (argv, aliases) {\n    var aliasLookup = {};\n    var descriptions = usage.getDescriptions();\n    var demanded = yargs.getDemanded();\n    var unknown = [];\n    Object.keys(aliases).forEach(function (key) {\n      aliases[key].forEach(function (alias) {\n        aliasLookup[alias] = key;\n      });\n    });\n    Object.keys(argv).forEach(function (key) {\n      if (key !== '$0' && key !== '_' && !descriptions.hasOwnProperty(key) && !demanded.hasOwnProperty(key) && !aliasLookup.hasOwnProperty(key)) {\n        unknown.push(key);\n      }\n    });\n\n    if (unknown.length > 0) {\n      usage.fail(__n('Unknown argument: %s', 'Unknown arguments: %s', unknown.length, unknown.join(', ')));\n    }\n  }; // validate arguments limited to enumerated choices\n\n\n  self.limitedChoices = function (argv) {\n    var options = yargs.getOptions();\n    var invalid = {};\n    if (!Object.keys(options.choices).length) return;\n    Object.keys(argv).forEach(function (key) {\n      if (key !== '$0' && key !== '_' && options.choices.hasOwnProperty(key)) {\n        [].concat(argv[key]).forEach(function (value) {\n          // TODO case-insensitive configurability\n          if (options.choices[key].indexOf(value) === -1) {\n            invalid[key] = (invalid[key] || []).concat(value);\n          }\n        });\n      }\n    });\n    var invalidKeys = Object.keys(invalid);\n    if (!invalidKeys.length) return;\n\n    var msg = __('Invalid values:');\n\n    invalidKeys.forEach(function (key) {\n      msg += '\\n  ' + __('Argument: %s, Given: %s, Choices: %s', key, usage.stringifiedValues(invalid[key]), usage.stringifiedValues(options.choices[key]));\n    });\n    usage.fail(msg);\n  }; // custom checks, added using the `check` option on yargs.\n\n\n  var checks = [];\n\n  self.check = function (f) {\n    checks.push(f);\n  };\n\n  self.customChecks = function (argv, aliases) {\n    checks.forEach(function (f) {\n      try {\n        var result = f(argv, aliases);\n\n        if (!result) {\n          usage.fail(__('Argument check failed: %s', f.toString()));\n        } else if (typeof result === 'string') {\n          usage.fail(result);\n        }\n      } catch (err) {\n        usage.fail(err.message ? err.message : err);\n      }\n    });\n  }; // check implications, argument foo implies => argument bar.\n\n\n  var implied = {};\n\n  self.implies = function (key, value) {\n    if (typeof key === 'object') {\n      Object.keys(key).forEach(function (k) {\n        self.implies(k, key[k]);\n      });\n    } else {\n      implied[key] = value;\n    }\n  };\n\n  self.getImplied = function () {\n    return implied;\n  };\n\n  self.implications = function (argv) {\n    var implyFail = [];\n    Object.keys(implied).forEach(function (key) {\n      var num;\n      var origKey = key;\n      var value = implied[key]; // convert string '1' to number 1\n\n      num = Number(key);\n      key = isNaN(num) ? key : num;\n\n      if (typeof key === 'number') {\n        // check length of argv._\n        key = argv._.length >= key;\n      } else if (key.match(/^--no-.+/)) {\n        // check if key doesn't exist\n        key = key.match(/^--no-(.+)/)[1];\n        key = !argv[key];\n      } else {\n        // check if key exists\n        key = argv[key];\n      }\n\n      num = Number(value);\n      value = isNaN(num) ? value : num;\n\n      if (typeof value === 'number') {\n        value = argv._.length >= value;\n      } else if (value.match(/^--no-.+/)) {\n        value = value.match(/^--no-(.+)/)[1];\n        value = !argv[value];\n      } else {\n        value = argv[value];\n      }\n\n      if (key && !value) {\n        implyFail.push(origKey);\n      }\n    });\n\n    if (implyFail.length) {\n      var msg = __('Implications failed:') + '\\n';\n      implyFail.forEach(function (key) {\n        msg += '  ' + key + ' -> ' + implied[key];\n      });\n      usage.fail(msg);\n    }\n  };\n\n  return self;\n};","map":{"version":3,"sources":["/home/marcel/Desktop/CobaProject/GUI backless-js/axsis/node_modules/curlconverter/node_modules/yargs/lib/validation.js"],"names":["module","exports","yargs","usage","y18n","__","__n","self","nonOptionCount","argv","demanded","getDemanded","_s","_","length","count","max","msg","undefined","fail","missingArgumentValue","defaultValues","options","getOptions","requiresArg","missingRequiredArgs","forEach","key","value","indexOf","Array","isArray","push","join","requiredArguments","missing","Object","keys","hasOwnProperty","customMsgs","customMsg","unknownArguments","aliases","aliasLookup","descriptions","getDescriptions","unknown","alias","limitedChoices","invalid","choices","concat","invalidKeys","stringifiedValues","checks","check","f","customChecks","result","toString","err","message","implied","implies","k","getImplied","implications","implyFail","num","origKey","Number","isNaN","match"],"mappings":"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","sourcesContent":["// validation-type-stuff, missing params,\n// bad implications, custom checks.\nmodule.exports = function (yargs, usage, y18n) {\n  var __ = y18n.__\n  var __n = y18n.__n\n  var self = {}\n\n  // validate appropriate # of non-option\n  // arguments were provided, i.e., '_'.\n  self.nonOptionCount = function (argv) {\n    var demanded = yargs.getDemanded()\n    var _s = argv._.length\n\n    if (demanded._ && (_s < demanded._.count || _s > demanded._.max)) {\n      if (demanded._.msg !== undefined) {\n        usage.fail(demanded._.msg)\n      } else if (_s < demanded._.count) {\n        usage.fail(\n          __('Not enough non-option arguments: got %s, need at least %s', argv._.length, demanded._.count)\n        )\n      } else {\n        usage.fail(\n          __('Too many non-option arguments: got %s, maximum of %s', argv._.length, demanded._.max)\n        )\n      }\n    }\n  }\n\n  // make sure that any args that require an\n  // value (--foo=bar), have a value.\n  self.missingArgumentValue = function (argv) {\n    var defaultValues = [true, false, '']\n    var options = yargs.getOptions()\n\n    if (options.requiresArg.length > 0) {\n      var missingRequiredArgs = []\n\n      options.requiresArg.forEach(function (key) {\n        var value = argv[key]\n\n        // if a value is explicitly requested,\n        // flag argument as missing if it does not\n        // look like foo=bar was entered.\n        if (~defaultValues.indexOf(value) ||\n          (Array.isArray(value) && !value.length)) {\n          missingRequiredArgs.push(key)\n        }\n      })\n\n      if (missingRequiredArgs.length > 0) {\n        usage.fail(__n(\n          'Missing argument value: %s',\n          'Missing argument values: %s',\n          missingRequiredArgs.length,\n          missingRequiredArgs.join(', ')\n        ))\n      }\n    }\n  }\n\n  // make sure all the required arguments are present.\n  self.requiredArguments = function (argv) {\n    var demanded = yargs.getDemanded()\n    var missing = null\n\n    Object.keys(demanded).forEach(function (key) {\n      if (!argv.hasOwnProperty(key)) {\n        missing = missing || {}\n        missing[key] = demanded[key]\n      }\n    })\n\n    if (missing) {\n      var customMsgs = []\n      Object.keys(missing).forEach(function (key) {\n        var msg = missing[key].msg\n        if (msg && customMsgs.indexOf(msg) < 0) {\n          customMsgs.push(msg)\n        }\n      })\n\n      var customMsg = customMsgs.length ? '\\n' + customMsgs.join('\\n') : ''\n\n      usage.fail(__n(\n        'Missing required argument: %s',\n        'Missing required arguments: %s',\n        Object.keys(missing).length,\n        Object.keys(missing).join(', ') + customMsg\n      ))\n    }\n  }\n\n  // check for unknown arguments (strict-mode).\n  self.unknownArguments = function (argv, aliases) {\n    var aliasLookup = {}\n    var descriptions = usage.getDescriptions()\n    var demanded = yargs.getDemanded()\n    var unknown = []\n\n    Object.keys(aliases).forEach(function (key) {\n      aliases[key].forEach(function (alias) {\n        aliasLookup[alias] = key\n      })\n    })\n\n    Object.keys(argv).forEach(function (key) {\n      if (key !== '$0' && key !== '_' &&\n        !descriptions.hasOwnProperty(key) &&\n        !demanded.hasOwnProperty(key) &&\n        !aliasLookup.hasOwnProperty(key)) {\n        unknown.push(key)\n      }\n    })\n\n    if (unknown.length > 0) {\n      usage.fail(__n(\n        'Unknown argument: %s',\n        'Unknown arguments: %s',\n        unknown.length,\n        unknown.join(', ')\n      ))\n    }\n  }\n\n  // validate arguments limited to enumerated choices\n  self.limitedChoices = function (argv) {\n    var options = yargs.getOptions()\n    var invalid = {}\n\n    if (!Object.keys(options.choices).length) return\n\n    Object.keys(argv).forEach(function (key) {\n      if (key !== '$0' && key !== '_' &&\n        options.choices.hasOwnProperty(key)) {\n        [].concat(argv[key]).forEach(function (value) {\n          // TODO case-insensitive configurability\n          if (options.choices[key].indexOf(value) === -1) {\n            invalid[key] = (invalid[key] || []).concat(value)\n          }\n        })\n      }\n    })\n\n    var invalidKeys = Object.keys(invalid)\n\n    if (!invalidKeys.length) return\n\n    var msg = __('Invalid values:')\n    invalidKeys.forEach(function (key) {\n      msg += '\\n  ' + __(\n        'Argument: %s, Given: %s, Choices: %s',\n        key,\n        usage.stringifiedValues(invalid[key]),\n        usage.stringifiedValues(options.choices[key])\n      )\n    })\n    usage.fail(msg)\n  }\n\n  // custom checks, added using the `check` option on yargs.\n  var checks = []\n  self.check = function (f) {\n    checks.push(f)\n  }\n\n  self.customChecks = function (argv, aliases) {\n    checks.forEach(function (f) {\n      try {\n        var result = f(argv, aliases)\n        if (!result) {\n          usage.fail(__('Argument check failed: %s', f.toString()))\n        } else if (typeof result === 'string') {\n          usage.fail(result)\n        }\n      } catch (err) {\n        usage.fail(err.message ? err.message : err)\n      }\n    })\n  }\n\n  // check implications, argument foo implies => argument bar.\n  var implied = {}\n  self.implies = function (key, value) {\n    if (typeof key === 'object') {\n      Object.keys(key).forEach(function (k) {\n        self.implies(k, key[k])\n      })\n    } else {\n      implied[key] = value\n    }\n  }\n  self.getImplied = function () {\n    return implied\n  }\n\n  self.implications = function (argv) {\n    var implyFail = []\n\n    Object.keys(implied).forEach(function (key) {\n      var num\n      var origKey = key\n      var value = implied[key]\n\n      // convert string '1' to number 1\n      num = Number(key)\n      key = isNaN(num) ? key : num\n\n      if (typeof key === 'number') {\n        // check length of argv._\n        key = argv._.length >= key\n      } else if (key.match(/^--no-.+/)) {\n        // check if key doesn't exist\n        key = key.match(/^--no-(.+)/)[1]\n        key = !argv[key]\n      } else {\n        // check if key exists\n        key = argv[key]\n      }\n\n      num = Number(value)\n      value = isNaN(num) ? value : num\n\n      if (typeof value === 'number') {\n        value = argv._.length >= value\n      } else if (value.match(/^--no-.+/)) {\n        value = value.match(/^--no-(.+)/)[1]\n        value = !argv[value]\n      } else {\n        value = argv[value]\n      }\n\n      if (key && !value) {\n        implyFail.push(origKey)\n      }\n    })\n\n    if (implyFail.length) {\n      var msg = __('Implications failed:') + '\\n'\n\n      implyFail.forEach(function (key) {\n        msg += ('  ' + key + ' -> ' + implied[key])\n      })\n\n      usage.fail(msg)\n    }\n  }\n\n  return self\n}\n"]},"metadata":{},"sourceType":"script"}