{"ast":null,"code":"'use strict';\n\nmodule.exports = Object.assign({}, // Export promiseified graceful-fs:\nrequire('./fs'), // Export extra methods:\nrequire('./copy-sync'), require('./copy'), require('./empty'), require('./ensure'), require('./json'), require('./mkdirs'), require('./move-sync'), require('./move'), require('./output'), require('./path-exists'), require('./remove')); // Export fs.promises as a getter property so that we don't trigger\n// ExperimentalWarning before fs.promises is actually accessed.\n\nconst fs = require('fs');\n\nif (Object.getOwnPropertyDescriptor(fs, 'promises')) {\n  Object.defineProperty(module.exports, 'promises', {\n    get() {\n      return fs.promises;\n    }\n\n  });\n}","map":{"version":3,"sources":["/home/marcel/Desktop/CobaProject/GUI backless-js/axsis/node_modules/fs-extra/lib/index.js"],"names":["module","exports","Object","assign","require","fs","getOwnPropertyDescriptor","defineProperty","get","promises"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,OAAP,GAAiBC,MAAM,CAACC,MAAP,CACf,EADe,EAEf;AACAC,OAAO,CAAC,MAAD,CAHQ,EAIf;AACAA,OAAO,CAAC,aAAD,CALQ,EAMfA,OAAO,CAAC,QAAD,CANQ,EAOfA,OAAO,CAAC,SAAD,CAPQ,EAQfA,OAAO,CAAC,UAAD,CARQ,EASfA,OAAO,CAAC,QAAD,CATQ,EAUfA,OAAO,CAAC,UAAD,CAVQ,EAWfA,OAAO,CAAC,aAAD,CAXQ,EAYfA,OAAO,CAAC,QAAD,CAZQ,EAafA,OAAO,CAAC,UAAD,CAbQ,EAcfA,OAAO,CAAC,eAAD,CAdQ,EAefA,OAAO,CAAC,UAAD,CAfQ,CAAjB,C,CAkBA;AACA;;AACA,MAAMC,EAAE,GAAGD,OAAO,CAAC,IAAD,CAAlB;;AACA,IAAIF,MAAM,CAACI,wBAAP,CAAgCD,EAAhC,EAAoC,UAApC,CAAJ,EAAqD;AACnDH,EAAAA,MAAM,CAACK,cAAP,CAAsBP,MAAM,CAACC,OAA7B,EAAsC,UAAtC,EAAkD;AAChDO,IAAAA,GAAG,GAAI;AAAE,aAAOH,EAAE,CAACI,QAAV;AAAoB;;AADmB,GAAlD;AAGD","sourcesContent":["'use strict'\n\nmodule.exports = Object.assign(\n  {},\n  // Export promiseified graceful-fs:\n  require('./fs'),\n  // Export extra methods:\n  require('./copy-sync'),\n  require('./copy'),\n  require('./empty'),\n  require('./ensure'),\n  require('./json'),\n  require('./mkdirs'),\n  require('./move-sync'),\n  require('./move'),\n  require('./output'),\n  require('./path-exists'),\n  require('./remove')\n)\n\n// Export fs.promises as a getter property so that we don't trigger\n// ExperimentalWarning before fs.promises is actually accessed.\nconst fs = require('fs')\nif (Object.getOwnPropertyDescriptor(fs, 'promises')) {\n  Object.defineProperty(module.exports, 'promises', {\n    get () { return fs.promises }\n  })\n}\n"]},"metadata":{},"sourceType":"script"}