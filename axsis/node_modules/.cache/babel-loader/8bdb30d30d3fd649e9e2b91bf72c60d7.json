{"ast":null,"code":"'use strict';\n\nconst u = require('universalify').fromCallback;\n\nconst path = require('path');\n\nconst fs = require('graceful-fs');\n\nconst mkdir = require('../mkdirs');\n\nconst pathExists = require('../path-exists').pathExists;\n\nfunction createLink(srcpath, dstpath, callback) {\n  function makeLink(srcpath, dstpath) {\n    fs.link(srcpath, dstpath, err => {\n      if (err) return callback(err);\n      callback(null);\n    });\n  }\n\n  pathExists(dstpath, (err, destinationExists) => {\n    if (err) return callback(err);\n    if (destinationExists) return callback(null);\n    fs.lstat(srcpath, err => {\n      if (err) {\n        err.message = err.message.replace('lstat', 'ensureLink');\n        return callback(err);\n      }\n\n      const dir = path.dirname(dstpath);\n      pathExists(dir, (err, dirExists) => {\n        if (err) return callback(err);\n        if (dirExists) return makeLink(srcpath, dstpath);\n        mkdir.mkdirs(dir, err => {\n          if (err) return callback(err);\n          makeLink(srcpath, dstpath);\n        });\n      });\n    });\n  });\n}\n\nfunction createLinkSync(srcpath, dstpath) {\n  const destinationExists = fs.existsSync(dstpath);\n  if (destinationExists) return undefined;\n\n  try {\n    fs.lstatSync(srcpath);\n  } catch (err) {\n    err.message = err.message.replace('lstat', 'ensureLink');\n    throw err;\n  }\n\n  const dir = path.dirname(dstpath);\n  const dirExists = fs.existsSync(dir);\n  if (dirExists) return fs.linkSync(srcpath, dstpath);\n  mkdir.mkdirsSync(dir);\n  return fs.linkSync(srcpath, dstpath);\n}\n\nmodule.exports = {\n  createLink: u(createLink),\n  createLinkSync\n};","map":{"version":3,"sources":["/home/marcel/Desktop/CobaProject/GUI backless-js/axsis/node_modules/fs-extra/lib/ensure/link.js"],"names":["u","require","fromCallback","path","fs","mkdir","pathExists","createLink","srcpath","dstpath","callback","makeLink","link","err","destinationExists","lstat","message","replace","dir","dirname","dirExists","mkdirs","createLinkSync","existsSync","undefined","lstatSync","linkSync","mkdirsSync","module","exports"],"mappings":"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","sourcesContent":["'use strict'\n\nconst u = require('universalify').fromCallback\nconst path = require('path')\nconst fs = require('graceful-fs')\nconst mkdir = require('../mkdirs')\nconst pathExists = require('../path-exists').pathExists\n\nfunction createLink (srcpath, dstpath, callback) {\n  function makeLink (srcpath, dstpath) {\n    fs.link(srcpath, dstpath, err => {\n      if (err) return callback(err)\n      callback(null)\n    })\n  }\n\n  pathExists(dstpath, (err, destinationExists) => {\n    if (err) return callback(err)\n    if (destinationExists) return callback(null)\n    fs.lstat(srcpath, (err) => {\n      if (err) {\n        err.message = err.message.replace('lstat', 'ensureLink')\n        return callback(err)\n      }\n\n      const dir = path.dirname(dstpath)\n      pathExists(dir, (err, dirExists) => {\n        if (err) return callback(err)\n        if (dirExists) return makeLink(srcpath, dstpath)\n        mkdir.mkdirs(dir, err => {\n          if (err) return callback(err)\n          makeLink(srcpath, dstpath)\n        })\n      })\n    })\n  })\n}\n\nfunction createLinkSync (srcpath, dstpath) {\n  const destinationExists = fs.existsSync(dstpath)\n  if (destinationExists) return undefined\n\n  try {\n    fs.lstatSync(srcpath)\n  } catch (err) {\n    err.message = err.message.replace('lstat', 'ensureLink')\n    throw err\n  }\n\n  const dir = path.dirname(dstpath)\n  const dirExists = fs.existsSync(dir)\n  if (dirExists) return fs.linkSync(srcpath, dstpath)\n  mkdir.mkdirsSync(dir)\n\n  return fs.linkSync(srcpath, dstpath)\n}\n\nmodule.exports = {\n  createLink: u(createLink),\n  createLinkSync\n}\n"]},"metadata":{},"sourceType":"script"}