{"ast":null,"code":"var assert = require('assert');\n\nvar Completion = require('./lib/completion');\n\nvar Parser = require('./lib/parser');\n\nvar path = require('path');\n\nvar tokenizeArgString = require('./lib/tokenize-arg-string');\n\nvar Usage = require('./lib/usage');\n\nvar Validation = require('./lib/validation');\n\nvar Y18n = require('y18n');\n\nArgv(process.argv.slice(2));\nvar exports = module.exports = Argv;\n\nfunction Argv(processArgs, cwd) {\n  processArgs = processArgs || []; // handle calling yargs().\n\n  var self = {};\n  var completion = null;\n  var usage = null;\n  var validation = null;\n  var y18n = Y18n({\n    directory: path.resolve(__dirname, './locales'),\n    updateFiles: false\n  });\n  if (!cwd) cwd = process.cwd();\n  self.$0 = process.argv.slice(0, 2).map(function (x, i) {\n    // ignore the node bin, specify this in your\n    // bin file with #!/usr/bin/env node\n    if (i === 0 && /\\b(node|iojs)$/.test(x)) return;\n    var b = rebase(cwd, x);\n    return x.match(/^\\//) && b.length < x.length ? b : x;\n  }).join(' ').trim();\n\n  if (process.env._ !== undefined && process.argv[1] === process.env._) {\n    self.$0 = process.env._.replace(path.dirname(process.execPath) + '/', '');\n  }\n\n  var options;\n\n  self.resetOptions = self.reset = function () {\n    // put yargs back into its initial\n    // state, this is useful for creating a\n    // nested CLI.\n    options = {\n      array: [],\n      boolean: [],\n      string: [],\n      narg: {},\n      key: {},\n      alias: {},\n      default: {},\n      defaultDescription: {},\n      choices: {},\n      requiresArg: [],\n      count: [],\n      normalize: [],\n      config: {},\n      envPrefix: undefined\n    };\n    usage = Usage(self, y18n); // handle usage output.\n\n    validation = Validation(self, usage, y18n); // handle arg validation.\n\n    completion = Completion(self, usage);\n    demanded = {};\n    groups = {};\n    exitProcess = true;\n    strict = false;\n    helpOpt = null;\n    versionOpt = null;\n    commandHandlers = {};\n    self.parsed = false;\n    return self;\n  };\n\n  self.resetOptions();\n\n  self.boolean = function (bools) {\n    options.boolean.push.apply(options.boolean, [].concat(bools));\n    return self;\n  };\n\n  self.array = function (arrays) {\n    options.array.push.apply(options.array, [].concat(arrays));\n    return self;\n  };\n\n  self.nargs = function (key, n) {\n    if (typeof key === 'object') {\n      Object.keys(key).forEach(function (k) {\n        self.nargs(k, key[k]);\n      });\n    } else {\n      options.narg[key] = n;\n    }\n\n    return self;\n  };\n\n  self.choices = function (key, values) {\n    if (typeof key === 'object') {\n      Object.keys(key).forEach(function (k) {\n        self.choices(k, key[k]);\n      });\n    } else {\n      options.choices[key] = (options.choices[key] || []).concat(values);\n    }\n\n    return self;\n  };\n\n  self.normalize = function (strings) {\n    options.normalize.push.apply(options.normalize, [].concat(strings));\n    return self;\n  };\n\n  self.config = function (key, msg, parseFn) {\n    if (typeof msg === 'function') {\n      parseFn = msg;\n      msg = null;\n    }\n\n    self.describe(key, msg || usage.deferY18nLookup('Path to JSON config file'));\n    (Array.isArray(key) ? key : [key]).forEach(function (k) {\n      options.config[k] = parseFn || true;\n    });\n    return self;\n  };\n\n  self.example = function (cmd, description) {\n    usage.example(cmd, description);\n    return self;\n  };\n\n  self.command = function (cmd, description, fn) {\n    if (description !== false) {\n      usage.command(cmd, description);\n    }\n\n    if (fn) commandHandlers[cmd] = fn;\n    return self;\n  };\n\n  var commandHandlers = {};\n\n  self.getCommandHandlers = function () {\n    return commandHandlers;\n  };\n\n  self.string = function (strings) {\n    options.string.push.apply(options.string, [].concat(strings));\n    return self;\n  };\n\n  self.default = function (key, value, defaultDescription) {\n    if (typeof key === 'object') {\n      Object.keys(key).forEach(function (k) {\n        self.default(k, key[k]);\n      });\n    } else {\n      if (defaultDescription) options.defaultDescription[key] = defaultDescription;\n\n      if (typeof value === 'function') {\n        if (!options.defaultDescription[key]) options.defaultDescription[key] = usage.functionDescription(value);\n        value = value.call();\n      }\n\n      options.default[key] = value;\n    }\n\n    return self;\n  };\n\n  self.alias = function (x, y) {\n    if (typeof x === 'object') {\n      Object.keys(x).forEach(function (key) {\n        self.alias(key, x[key]);\n      });\n    } else {\n      // perhaps 'x' is already an alias in another list?\n      // if so we should append to x's list.\n      var aliases = null;\n      Object.keys(options.alias).forEach(function (key) {\n        if (~options.alias[key].indexOf(x)) aliases = options.alias[key];\n      });\n\n      if (aliases) {\n        // x was an alias itself.\n        aliases.push(y);\n      } else {\n        // x is a new alias key.\n        options.alias[x] = (options.alias[x] || []).concat(y);\n      } // wait! perhaps we've created two lists of aliases\n      // that reference each other?\n\n\n      if (options.alias[y]) {\n        Array.prototype.push.apply(options.alias[x] || aliases, options.alias[y]);\n        delete options.alias[y];\n      }\n    }\n\n    return self;\n  };\n\n  self.count = function (counts) {\n    options.count.push.apply(options.count, [].concat(counts));\n    return self;\n  };\n\n  var demanded = {};\n\n  self.demand = self.required = self.require = function (keys, max, msg) {\n    // you can optionally provide a 'max' key,\n    // which will raise an exception if too many '_'\n    // options are provided.\n    if (typeof max !== 'number') {\n      msg = max;\n      max = Infinity;\n    }\n\n    if (typeof keys === 'number') {\n      if (!demanded._) demanded._ = {\n        count: 0,\n        msg: null,\n        max: max\n      };\n      demanded._.count = keys;\n      demanded._.msg = msg;\n    } else if (Array.isArray(keys)) {\n      keys.forEach(function (key) {\n        self.demand(key, msg);\n      });\n    } else {\n      if (typeof msg === 'string') {\n        demanded[keys] = {\n          msg: msg\n        };\n      } else if (msg === true || typeof msg === 'undefined') {\n        demanded[keys] = {\n          msg: undefined\n        };\n      }\n    }\n\n    return self;\n  };\n\n  self.getDemanded = function () {\n    return demanded;\n  };\n\n  self.requiresArg = function (requiresArgs) {\n    options.requiresArg.push.apply(options.requiresArg, [].concat(requiresArgs));\n    return self;\n  };\n\n  self.implies = function (key, value) {\n    validation.implies(key, value);\n    return self;\n  };\n\n  self.usage = function (msg, opts) {\n    if (!opts && typeof msg === 'object') {\n      opts = msg;\n      msg = null;\n    }\n\n    usage.usage(msg);\n    if (opts) self.options(opts);\n    return self;\n  };\n\n  self.epilogue = self.epilog = function (msg) {\n    usage.epilog(msg);\n    return self;\n  };\n\n  self.fail = function (f) {\n    usage.failFn(f);\n    return self;\n  };\n\n  self.check = function (f) {\n    validation.check(f);\n    return self;\n  };\n\n  self.defaults = self.default;\n\n  self.describe = function (key, desc) {\n    options.key[key] = true;\n    usage.describe(key, desc);\n    return self;\n  };\n\n  self.parse = function (args) {\n    return parseArgs(args);\n  };\n\n  self.option = self.options = function (key, opt) {\n    if (typeof key === 'object') {\n      Object.keys(key).forEach(function (k) {\n        self.options(k, key[k]);\n      });\n    } else {\n      assert(typeof opt === 'object', 'second argument to option must be an object');\n      options.key[key] = true; // track manually set keys.\n\n      if (opt.alias) self.alias(key, opt.alias);\n      var demand = opt.demand || opt.required || opt.require;\n\n      if (demand) {\n        self.demand(key, demand);\n      }\n\n      if ('config' in opt) {\n        self.config(key, opt.configParser);\n      }\n\n      if ('default' in opt) {\n        self.default(key, opt.default);\n      }\n\n      if ('nargs' in opt) {\n        self.nargs(key, opt.nargs);\n      }\n\n      if ('choices' in opt) {\n        self.choices(key, opt.choices);\n      }\n\n      if ('group' in opt) {\n        self.group(key, opt.group);\n      }\n\n      if (opt.boolean || opt.type === 'boolean') {\n        self.boolean(key);\n        if (opt.alias) self.boolean(opt.alias);\n      }\n\n      if (opt.array || opt.type === 'array') {\n        self.array(key);\n        if (opt.alias) self.array(opt.alias);\n      }\n\n      if (opt.string || opt.type === 'string') {\n        self.string(key);\n        if (opt.alias) self.string(opt.alias);\n      }\n\n      if (opt.count || opt.type === 'count') {\n        self.count(key);\n      }\n\n      if (opt.defaultDescription) {\n        options.defaultDescription[key] = opt.defaultDescription;\n      }\n\n      var desc = opt.describe || opt.description || opt.desc;\n\n      if (desc) {\n        self.describe(key, desc);\n      }\n\n      if (opt.requiresArg) {\n        self.requiresArg(key);\n      }\n    }\n\n    return self;\n  };\n\n  self.getOptions = function () {\n    return options;\n  };\n\n  var groups = {};\n\n  self.group = function (opts, groupName) {\n    var seen = {};\n    groups[groupName] = (groups[groupName] || []).concat(opts).filter(function (key) {\n      if (seen[key]) return false;\n      return seen[key] = true;\n    });\n    return self;\n  };\n\n  self.getGroups = function () {\n    return groups;\n  }; // as long as options.envPrefix is not undefined,\n  // parser will apply env vars matching prefix to argv\n\n\n  self.env = function (prefix) {\n    if (prefix === false) options.envPrefix = undefined;else options.envPrefix = prefix || '';\n    return self;\n  };\n\n  self.wrap = function (cols) {\n    usage.wrap(cols);\n    return self;\n  };\n\n  var strict = false;\n\n  self.strict = function () {\n    strict = true;\n    return self;\n  };\n\n  self.getStrict = function () {\n    return strict;\n  };\n\n  self.showHelp = function (level) {\n    if (!self.parsed) parseArgs(processArgs); // run parser, if it has not already been executed.\n\n    usage.showHelp(level);\n    return self;\n  };\n\n  var versionOpt = null;\n\n  self.version = function (ver, opt, msg) {\n    versionOpt = opt || 'version';\n    usage.version(ver);\n    self.boolean(versionOpt);\n    self.describe(versionOpt, msg || usage.deferY18nLookup('Show version number'));\n    return self;\n  };\n\n  var helpOpt = null;\n\n  self.addHelpOpt = function (opt, msg) {\n    helpOpt = opt;\n    self.boolean(opt);\n    self.describe(opt, msg || usage.deferY18nLookup('Show help'));\n    return self;\n  };\n\n  self.showHelpOnFail = function (enabled, message) {\n    usage.showHelpOnFail(enabled, message);\n    return self;\n  };\n\n  var exitProcess = true;\n\n  self.exitProcess = function (enabled) {\n    if (typeof enabled !== 'boolean') {\n      enabled = true;\n    }\n\n    exitProcess = enabled;\n    return self;\n  };\n\n  self.getExitProcess = function () {\n    return exitProcess;\n  };\n\n  self.help = function () {\n    if (arguments.length > 0) return self.addHelpOpt.apply(self, arguments);\n    if (!self.parsed) parseArgs(processArgs); // run parser, if it has not already been executed.\n\n    return usage.help();\n  };\n\n  var completionCommand = null;\n\n  self.completion = function (cmd, desc, fn) {\n    // a function to execute when generating\n    // completions can be provided as the second\n    // or third argument to completion.\n    if (typeof desc === 'function') {\n      fn = desc;\n      desc = null;\n    } // register the completion command.\n\n\n    completionCommand = cmd || 'completion';\n\n    if (!desc && desc !== false) {\n      desc = 'generate bash completion script';\n    }\n\n    self.command(completionCommand, desc); // a function can be provided\n\n    if (fn) completion.registerFunction(fn);\n    return self;\n  };\n\n  self.showCompletionScript = function ($0) {\n    $0 = $0 || self.$0;\n    console.log(completion.generateCompletionScript($0));\n    return self;\n  };\n\n  self.locale = function (locale) {\n    if (arguments.length === 0) {\n      guessLocale();\n      return y18n.getLocale();\n    }\n\n    detectLocale = false;\n    y18n.setLocale(locale);\n    return self;\n  };\n\n  self.updateStrings = self.updateLocale = function (obj) {\n    detectLocale = false;\n    y18n.updateLocale(obj);\n    return self;\n  };\n\n  var detectLocale = true;\n\n  self.detectLocale = function (detect) {\n    detectLocale = detect;\n    return self;\n  };\n\n  self.getDetectLocale = function () {\n    return detectLocale;\n  };\n\n  self.getUsageInstance = function () {\n    return usage;\n  };\n\n  self.getValidationInstance = function () {\n    return validation;\n  };\n\n  self.terminalWidth = function () {\n    return require('window-size').width;\n  };\n\n  Object.defineProperty(self, 'argv', {\n    get: function () {\n      var args = null;\n\n      try {\n        args = parseArgs(processArgs);\n      } catch (err) {\n        usage.fail(err.message);\n      }\n\n      return args;\n    },\n    enumerable: true\n  });\n\n  function parseArgs(args) {\n    args = normalizeArgs(args);\n    var parsed = Parser(args, options, y18n);\n    var argv = parsed.argv;\n    var aliases = parsed.aliases;\n    argv.$0 = self.$0;\n    self.parsed = parsed;\n    guessLocale(); // guess locale lazily, so that it can be turned off in chain.\n    // while building up the argv object, there\n    // are two passes through the parser. If completion\n    // is being performed short-circuit on the first pass.\n\n    if (completionCommand && process.argv.join(' ').indexOf(completion.completionKey) !== -1 && !argv[completion.completionKey]) {\n      return argv;\n    } // if there's a handler associated with a\n    // command defer processing to it.\n\n\n    var handlerKeys = Object.keys(self.getCommandHandlers());\n\n    for (var i = 0, command; (command = handlerKeys[i]) !== undefined; i++) {\n      if (~argv._.indexOf(command)) {\n        runCommand(command, self, argv);\n        return self.argv;\n      }\n    } // generate a completion script for adding to ~/.bashrc.\n\n\n    if (completionCommand && ~argv._.indexOf(completionCommand) && !argv[completion.completionKey]) {\n      self.showCompletionScript();\n\n      if (exitProcess) {\n        process.exit(0);\n      }\n    } // we must run completions first, a user might\n    // want to complete the --help or --version option.\n\n\n    if (completion.completionKey in argv) {\n      // we allow for asynchronous completions,\n      // e.g., loading in a list of commands from an API.\n      completion.getCompletion(function (completions) {\n        ;\n        (completions || []).forEach(function (completion) {\n          console.log(completion);\n        });\n\n        if (exitProcess) {\n          process.exit(0);\n        }\n      });\n      return;\n    }\n\n    var helpOrVersion = false;\n    Object.keys(argv).forEach(function (key) {\n      if (key === helpOpt && argv[key]) {\n        helpOrVersion = true;\n        self.showHelp('log');\n\n        if (exitProcess) {\n          process.exit(0);\n        }\n      } else if (key === versionOpt && argv[key]) {\n        helpOrVersion = true;\n        usage.showVersion();\n\n        if (exitProcess) {\n          process.exit(0);\n        }\n      }\n    }); // If the help or version options where used and exitProcess is false,\n    // we won't run validations\n\n    if (!helpOrVersion) {\n      if (parsed.error) throw parsed.error; // if we're executed via bash completion, don't\n      // bother with validation.\n\n      if (!argv[completion.completionKey]) {\n        validation.nonOptionCount(argv);\n        validation.missingArgumentValue(argv);\n        validation.requiredArguments(argv);\n        if (strict) validation.unknownArguments(argv, aliases);\n        validation.customChecks(argv, aliases);\n        validation.limitedChoices(argv);\n        validation.implications(argv);\n      }\n    }\n\n    setPlaceholderKeys(argv);\n    return argv;\n  }\n\n  function guessLocale() {\n    if (!detectLocale) return;\n\n    try {\n      var osLocale = require('os-locale');\n\n      self.locale(osLocale.sync({\n        spawn: false\n      }));\n    } catch (err) {// if we explode looking up locale just noop\n      // we'll keep using the default language 'en'.\n    }\n  }\n\n  function runCommand(command, yargs, argv) {\n    setPlaceholderKeys(argv);\n    yargs.getCommandHandlers()[command](yargs.reset(), argv);\n  }\n\n  function setPlaceholderKeys(argv) {\n    Object.keys(options.key).forEach(function (key) {\n      // don't set placeholder keys for dot\n      // notation options 'foo.bar'.\n      if (~key.indexOf('.')) return;\n      if (typeof argv[key] === 'undefined') argv[key] = undefined;\n    });\n  }\n\n  function normalizeArgs(args) {\n    if (typeof args === 'string') {\n      return tokenizeArgString(args);\n    }\n\n    return args;\n  }\n\n  singletonify(self);\n  return self;\n} // rebase an absolute path to a relative one with respect to a base directory\n// exported for tests\n\n\nexports.rebase = rebase;\n\nfunction rebase(base, dir) {\n  return path.relative(base, dir);\n}\n/*  Hack an instance of Argv with process.argv into Argv\n    so people can do\n    require('yargs')(['--beeble=1','-z','zizzle']).argv\n    to parse a list of args and\n    require('yargs').argv\n    to get a parsed version of process.argv.\n*/\n\n\nfunction singletonify(inst) {\n  Object.keys(inst).forEach(function (key) {\n    if (key === 'argv') {\n      Argv.__defineGetter__(key, inst.__lookupGetter__(key));\n    } else {\n      Argv[key] = typeof inst[key] === 'function' ? inst[key].bind(inst) : inst[key];\n    }\n  });\n}","map":{"version":3,"sources":["/home/marcel/Desktop/CobaProject/GUI backless-js/axsis/node_modules/curlconverter/node_modules/yargs/index.js"],"names":["assert","require","Completion","Parser","path","tokenizeArgString","Usage","Validation","Y18n","Argv","process","argv","slice","exports","module","processArgs","cwd","self","completion","usage","validation","y18n","directory","resolve","__dirname","updateFiles","$0","map","x","i","test","b","rebase","match","length","join","trim","env","_","undefined","replace","dirname","execPath","options","resetOptions","reset","array","boolean","string","narg","key","alias","default","defaultDescription","choices","requiresArg","count","normalize","config","envPrefix","demanded","groups","exitProcess","strict","helpOpt","versionOpt","commandHandlers","parsed","bools","push","apply","concat","arrays","nargs","n","Object","keys","forEach","k","values","strings","msg","parseFn","describe","deferY18nLookup","Array","isArray","example","cmd","description","command","fn","getCommandHandlers","value","functionDescription","call","y","aliases","indexOf","prototype","counts","demand","required","max","Infinity","getDemanded","requiresArgs","implies","opts","epilogue","epilog","fail","f","failFn","check","defaults","desc","parse","args","parseArgs","option","opt","configParser","group","type","getOptions","groupName","seen","filter","getGroups","prefix","wrap","cols","getStrict","showHelp","level","version","ver","addHelpOpt","showHelpOnFail","enabled","message","getExitProcess","help","arguments","completionCommand","registerFunction","showCompletionScript","console","log","generateCompletionScript","locale","guessLocale","getLocale","detectLocale","setLocale","updateStrings","updateLocale","obj","detect","getDetectLocale","getUsageInstance","getValidationInstance","terminalWidth","width","defineProperty","get","err","enumerable","normalizeArgs","completionKey","handlerKeys","runCommand","exit","getCompletion","completions","helpOrVersion","showVersion","error","nonOptionCount","missingArgumentValue","requiredArguments","unknownArguments","customChecks","limitedChoices","implications","setPlaceholderKeys","osLocale","sync","spawn","yargs","singletonify","base","dir","relative","inst","__defineGetter__","__lookupGetter__","bind"],"mappings":"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","sourcesContent":["var assert = require('assert')\nvar Completion = require('./lib/completion')\nvar Parser = require('./lib/parser')\nvar path = require('path')\nvar tokenizeArgString = require('./lib/tokenize-arg-string')\nvar Usage = require('./lib/usage')\nvar Validation = require('./lib/validation')\nvar Y18n = require('y18n')\n\nArgv(process.argv.slice(2))\n\nvar exports = module.exports = Argv\nfunction Argv (processArgs, cwd) {\n  processArgs = processArgs || [] // handle calling yargs().\n\n  var self = {}\n  var completion = null\n  var usage = null\n  var validation = null\n  var y18n = Y18n({\n    directory: path.resolve(__dirname, './locales'),\n    updateFiles: false\n  })\n\n  if (!cwd) cwd = process.cwd()\n\n  self.$0 = process.argv\n    .slice(0, 2)\n    .map(function (x, i) {\n      // ignore the node bin, specify this in your\n      // bin file with #!/usr/bin/env node\n      if (i === 0 && /\\b(node|iojs)$/.test(x)) return\n      var b = rebase(cwd, x)\n      return x.match(/^\\//) && b.length < x.length ? b : x\n    })\n    .join(' ').trim()\n\n  if (process.env._ !== undefined && process.argv[1] === process.env._) {\n    self.$0 = process.env._.replace(\n      path.dirname(process.execPath) + '/', ''\n    )\n  }\n\n  var options\n  self.resetOptions = self.reset = function () {\n    // put yargs back into its initial\n    // state, this is useful for creating a\n    // nested CLI.\n    options = {\n      array: [],\n      boolean: [],\n      string: [],\n      narg: {},\n      key: {},\n      alias: {},\n      default: {},\n      defaultDescription: {},\n      choices: {},\n      requiresArg: [],\n      count: [],\n      normalize: [],\n      config: {},\n      envPrefix: undefined\n    }\n\n    usage = Usage(self, y18n) // handle usage output.\n    validation = Validation(self, usage, y18n) // handle arg validation.\n    completion = Completion(self, usage)\n\n    demanded = {}\n    groups = {}\n\n    exitProcess = true\n    strict = false\n    helpOpt = null\n    versionOpt = null\n    commandHandlers = {}\n    self.parsed = false\n\n    return self\n  }\n  self.resetOptions()\n\n  self.boolean = function (bools) {\n    options.boolean.push.apply(options.boolean, [].concat(bools))\n    return self\n  }\n\n  self.array = function (arrays) {\n    options.array.push.apply(options.array, [].concat(arrays))\n    return self\n  }\n\n  self.nargs = function (key, n) {\n    if (typeof key === 'object') {\n      Object.keys(key).forEach(function (k) {\n        self.nargs(k, key[k])\n      })\n    } else {\n      options.narg[key] = n\n    }\n    return self\n  }\n\n  self.choices = function (key, values) {\n    if (typeof key === 'object') {\n      Object.keys(key).forEach(function (k) {\n        self.choices(k, key[k])\n      })\n    } else {\n      options.choices[key] = (options.choices[key] || []).concat(values)\n    }\n    return self\n  }\n\n  self.normalize = function (strings) {\n    options.normalize.push.apply(options.normalize, [].concat(strings))\n    return self\n  }\n\n  self.config = function (key, msg, parseFn) {\n    if (typeof msg === 'function') {\n      parseFn = msg\n      msg = null\n    }\n    self.describe(key, msg || usage.deferY18nLookup('Path to JSON config file'))\n    ;(Array.isArray(key) ? key : [key]).forEach(function (k) {\n      options.config[k] = parseFn || true\n    })\n    return self\n  }\n\n  self.example = function (cmd, description) {\n    usage.example(cmd, description)\n    return self\n  }\n\n  self.command = function (cmd, description, fn) {\n    if (description !== false) {\n      usage.command(cmd, description)\n    }\n    if (fn) commandHandlers[cmd] = fn\n    return self\n  }\n\n  var commandHandlers = {}\n  self.getCommandHandlers = function () {\n    return commandHandlers\n  }\n\n  self.string = function (strings) {\n    options.string.push.apply(options.string, [].concat(strings))\n    return self\n  }\n\n  self.default = function (key, value, defaultDescription) {\n    if (typeof key === 'object') {\n      Object.keys(key).forEach(function (k) {\n        self.default(k, key[k])\n      })\n    } else {\n      if (defaultDescription) options.defaultDescription[key] = defaultDescription\n      if (typeof value === 'function') {\n        if (!options.defaultDescription[key]) options.defaultDescription[key] = usage.functionDescription(value)\n        value = value.call()\n      }\n      options.default[key] = value\n    }\n    return self\n  }\n\n  self.alias = function (x, y) {\n    if (typeof x === 'object') {\n      Object.keys(x).forEach(function (key) {\n        self.alias(key, x[key])\n      })\n    } else {\n      // perhaps 'x' is already an alias in another list?\n      // if so we should append to x's list.\n      var aliases = null\n      Object.keys(options.alias).forEach(function (key) {\n        if (~options.alias[key].indexOf(x)) aliases = options.alias[key]\n      })\n\n      if (aliases) { // x was an alias itself.\n        aliases.push(y)\n      } else { // x is a new alias key.\n        options.alias[x] = (options.alias[x] || []).concat(y)\n      }\n\n      // wait! perhaps we've created two lists of aliases\n      // that reference each other?\n      if (options.alias[y]) {\n        Array.prototype.push.apply((options.alias[x] || aliases), options.alias[y])\n        delete options.alias[y]\n      }\n    }\n    return self\n  }\n\n  self.count = function (counts) {\n    options.count.push.apply(options.count, [].concat(counts))\n    return self\n  }\n\n  var demanded = {}\n  self.demand = self.required = self.require = function (keys, max, msg) {\n    // you can optionally provide a 'max' key,\n    // which will raise an exception if too many '_'\n    // options are provided.\n    if (typeof max !== 'number') {\n      msg = max\n      max = Infinity\n    }\n\n    if (typeof keys === 'number') {\n      if (!demanded._) demanded._ = { count: 0, msg: null, max: max }\n      demanded._.count = keys\n      demanded._.msg = msg\n    } else if (Array.isArray(keys)) {\n      keys.forEach(function (key) {\n        self.demand(key, msg)\n      })\n    } else {\n      if (typeof msg === 'string') {\n        demanded[keys] = { msg: msg }\n      } else if (msg === true || typeof msg === 'undefined') {\n        demanded[keys] = { msg: undefined }\n      }\n    }\n\n    return self\n  }\n  self.getDemanded = function () {\n    return demanded\n  }\n\n  self.requiresArg = function (requiresArgs) {\n    options.requiresArg.push.apply(options.requiresArg, [].concat(requiresArgs))\n    return self\n  }\n\n  self.implies = function (key, value) {\n    validation.implies(key, value)\n    return self\n  }\n\n  self.usage = function (msg, opts) {\n    if (!opts && typeof msg === 'object') {\n      opts = msg\n      msg = null\n    }\n\n    usage.usage(msg)\n\n    if (opts) self.options(opts)\n\n    return self\n  }\n\n  self.epilogue = self.epilog = function (msg) {\n    usage.epilog(msg)\n    return self\n  }\n\n  self.fail = function (f) {\n    usage.failFn(f)\n    return self\n  }\n\n  self.check = function (f) {\n    validation.check(f)\n    return self\n  }\n\n  self.defaults = self.default\n\n  self.describe = function (key, desc) {\n    options.key[key] = true\n    usage.describe(key, desc)\n    return self\n  }\n\n  self.parse = function (args) {\n    return parseArgs(args)\n  }\n\n  self.option = self.options = function (key, opt) {\n    if (typeof key === 'object') {\n      Object.keys(key).forEach(function (k) {\n        self.options(k, key[k])\n      })\n    } else {\n      assert(typeof opt === 'object', 'second argument to option must be an object')\n\n      options.key[key] = true // track manually set keys.\n\n      if (opt.alias) self.alias(key, opt.alias)\n\n      var demand = opt.demand || opt.required || opt.require\n\n      if (demand) {\n        self.demand(key, demand)\n      } if ('config' in opt) {\n        self.config(key, opt.configParser)\n      } if ('default' in opt) {\n        self.default(key, opt.default)\n      } if ('nargs' in opt) {\n        self.nargs(key, opt.nargs)\n      } if ('choices' in opt) {\n        self.choices(key, opt.choices)\n      } if ('group' in opt) {\n        self.group(key, opt.group)\n      } if (opt.boolean || opt.type === 'boolean') {\n        self.boolean(key)\n        if (opt.alias) self.boolean(opt.alias)\n      } if (opt.array || opt.type === 'array') {\n        self.array(key)\n        if (opt.alias) self.array(opt.alias)\n      } if (opt.string || opt.type === 'string') {\n        self.string(key)\n        if (opt.alias) self.string(opt.alias)\n      } if (opt.count || opt.type === 'count') {\n        self.count(key)\n      } if (opt.defaultDescription) {\n        options.defaultDescription[key] = opt.defaultDescription\n      }\n\n      var desc = opt.describe || opt.description || opt.desc\n      if (desc) {\n        self.describe(key, desc)\n      }\n\n      if (opt.requiresArg) {\n        self.requiresArg(key)\n      }\n    }\n\n    return self\n  }\n  self.getOptions = function () {\n    return options\n  }\n\n  var groups = {}\n  self.group = function (opts, groupName) {\n    var seen = {}\n    groups[groupName] = (groups[groupName] || []).concat(opts).filter(function (key) {\n      if (seen[key]) return false\n      return (seen[key] = true)\n    })\n    return self\n  }\n  self.getGroups = function () {\n    return groups\n  }\n\n  // as long as options.envPrefix is not undefined,\n  // parser will apply env vars matching prefix to argv\n  self.env = function (prefix) {\n    if (prefix === false) options.envPrefix = undefined\n    else options.envPrefix = prefix || ''\n    return self\n  }\n\n  self.wrap = function (cols) {\n    usage.wrap(cols)\n    return self\n  }\n\n  var strict = false\n  self.strict = function () {\n    strict = true\n    return self\n  }\n  self.getStrict = function () {\n    return strict\n  }\n\n  self.showHelp = function (level) {\n    if (!self.parsed) parseArgs(processArgs) // run parser, if it has not already been executed.\n    usage.showHelp(level)\n    return self\n  }\n\n  var versionOpt = null\n  self.version = function (ver, opt, msg) {\n    versionOpt = opt || 'version'\n    usage.version(ver)\n    self.boolean(versionOpt)\n    self.describe(versionOpt, msg || usage.deferY18nLookup('Show version number'))\n    return self\n  }\n\n  var helpOpt = null\n  self.addHelpOpt = function (opt, msg) {\n    helpOpt = opt\n    self.boolean(opt)\n    self.describe(opt, msg || usage.deferY18nLookup('Show help'))\n    return self\n  }\n\n  self.showHelpOnFail = function (enabled, message) {\n    usage.showHelpOnFail(enabled, message)\n    return self\n  }\n\n  var exitProcess = true\n  self.exitProcess = function (enabled) {\n    if (typeof enabled !== 'boolean') {\n      enabled = true\n    }\n    exitProcess = enabled\n    return self\n  }\n  self.getExitProcess = function () {\n    return exitProcess\n  }\n\n  self.help = function () {\n    if (arguments.length > 0) return self.addHelpOpt.apply(self, arguments)\n\n    if (!self.parsed) parseArgs(processArgs) // run parser, if it has not already been executed.\n\n    return usage.help()\n  }\n\n  var completionCommand = null\n  self.completion = function (cmd, desc, fn) {\n    // a function to execute when generating\n    // completions can be provided as the second\n    // or third argument to completion.\n    if (typeof desc === 'function') {\n      fn = desc\n      desc = null\n    }\n\n    // register the completion command.\n    completionCommand = cmd || 'completion'\n    if (!desc && desc !== false) {\n      desc = 'generate bash completion script'\n    }\n    self.command(completionCommand, desc)\n\n    // a function can be provided\n    if (fn) completion.registerFunction(fn)\n\n    return self\n  }\n\n  self.showCompletionScript = function ($0) {\n    $0 = $0 || self.$0\n    console.log(completion.generateCompletionScript($0))\n    return self\n  }\n\n  self.locale = function (locale) {\n    if (arguments.length === 0) {\n      guessLocale()\n      return y18n.getLocale()\n    }\n    detectLocale = false\n    y18n.setLocale(locale)\n    return self\n  }\n\n  self.updateStrings = self.updateLocale = function (obj) {\n    detectLocale = false\n    y18n.updateLocale(obj)\n    return self\n  }\n\n  var detectLocale = true\n  self.detectLocale = function (detect) {\n    detectLocale = detect\n    return self\n  }\n  self.getDetectLocale = function () {\n    return detectLocale\n  }\n\n  self.getUsageInstance = function () {\n    return usage\n  }\n\n  self.getValidationInstance = function () {\n    return validation\n  }\n\n  self.terminalWidth = function () {\n    return require('window-size').width\n  }\n\n  Object.defineProperty(self, 'argv', {\n    get: function () {\n      var args = null\n\n      try {\n        args = parseArgs(processArgs)\n      } catch (err) {\n        usage.fail(err.message)\n      }\n\n      return args\n    },\n    enumerable: true\n  })\n\n  function parseArgs (args) {\n    args = normalizeArgs(args)\n\n    var parsed = Parser(args, options, y18n)\n    var argv = parsed.argv\n    var aliases = parsed.aliases\n\n    argv.$0 = self.$0\n\n    self.parsed = parsed\n\n    guessLocale() // guess locale lazily, so that it can be turned off in chain.\n\n    // while building up the argv object, there\n    // are two passes through the parser. If completion\n    // is being performed short-circuit on the first pass.\n    if (completionCommand &&\n      (process.argv.join(' ')).indexOf(completion.completionKey) !== -1 &&\n      !argv[completion.completionKey]) {\n      return argv\n    }\n\n    // if there's a handler associated with a\n    // command defer processing to it.\n    var handlerKeys = Object.keys(self.getCommandHandlers())\n    for (var i = 0, command; (command = handlerKeys[i]) !== undefined; i++) {\n      if (~argv._.indexOf(command)) {\n        runCommand(command, self, argv)\n        return self.argv\n      }\n    }\n\n    // generate a completion script for adding to ~/.bashrc.\n    if (completionCommand && ~argv._.indexOf(completionCommand) && !argv[completion.completionKey]) {\n      self.showCompletionScript()\n      if (exitProcess) {\n        process.exit(0)\n      }\n    }\n\n    // we must run completions first, a user might\n    // want to complete the --help or --version option.\n    if (completion.completionKey in argv) {\n      // we allow for asynchronous completions,\n      // e.g., loading in a list of commands from an API.\n      completion.getCompletion(function (completions) {\n        ;(completions || []).forEach(function (completion) {\n          console.log(completion)\n        })\n\n        if (exitProcess) {\n          process.exit(0)\n        }\n      })\n      return\n    }\n\n    var helpOrVersion = false\n    Object.keys(argv).forEach(function (key) {\n      if (key === helpOpt && argv[key]) {\n        helpOrVersion = true\n        self.showHelp('log')\n        if (exitProcess) {\n          process.exit(0)\n        }\n      } else if (key === versionOpt && argv[key]) {\n        helpOrVersion = true\n        usage.showVersion()\n        if (exitProcess) {\n          process.exit(0)\n        }\n      }\n    })\n\n    // If the help or version options where used and exitProcess is false,\n    // we won't run validations\n    if (!helpOrVersion) {\n      if (parsed.error) throw parsed.error\n\n      // if we're executed via bash completion, don't\n      // bother with validation.\n      if (!argv[completion.completionKey]) {\n        validation.nonOptionCount(argv)\n        validation.missingArgumentValue(argv)\n        validation.requiredArguments(argv)\n        if (strict) validation.unknownArguments(argv, aliases)\n        validation.customChecks(argv, aliases)\n        validation.limitedChoices(argv)\n        validation.implications(argv)\n      }\n    }\n\n    setPlaceholderKeys(argv)\n\n    return argv\n  }\n\n  function guessLocale () {\n    if (!detectLocale) return\n\n    try {\n      var osLocale = require('os-locale')\n      self.locale(osLocale.sync({ spawn: false }))\n    } catch (err) {\n      // if we explode looking up locale just noop\n      // we'll keep using the default language 'en'.\n    }\n  }\n\n  function runCommand (command, yargs, argv) {\n    setPlaceholderKeys(argv)\n    yargs.getCommandHandlers()[command](yargs.reset(), argv)\n  }\n\n  function setPlaceholderKeys (argv) {\n    Object.keys(options.key).forEach(function (key) {\n      // don't set placeholder keys for dot\n      // notation options 'foo.bar'.\n      if (~key.indexOf('.')) return\n      if (typeof argv[key] === 'undefined') argv[key] = undefined\n    })\n  }\n\n  function normalizeArgs (args) {\n    if (typeof args === 'string') {\n      return tokenizeArgString(args)\n    }\n    return args\n  }\n\n  singletonify(self)\n  return self\n}\n\n// rebase an absolute path to a relative one with respect to a base directory\n// exported for tests\nexports.rebase = rebase\nfunction rebase (base, dir) {\n  return path.relative(base, dir)\n}\n\n/*  Hack an instance of Argv with process.argv into Argv\n    so people can do\n    require('yargs')(['--beeble=1','-z','zizzle']).argv\n    to parse a list of args and\n    require('yargs').argv\n    to get a parsed version of process.argv.\n*/\nfunction singletonify (inst) {\n  Object.keys(inst).forEach(function (key) {\n    if (key === 'argv') {\n      Argv.__defineGetter__(key, inst.__lookupGetter__(key))\n    } else {\n      Argv[key] = typeof inst[key] === 'function' ? inst[key].bind(inst) : inst[key]\n    }\n  })\n}\n"]},"metadata":{},"sourceType":"script"}