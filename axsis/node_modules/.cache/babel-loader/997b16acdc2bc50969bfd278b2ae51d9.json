{"ast":null,"code":"// this file handles outputting usage instructions,\n// failures, etc. keeps logging in one place.\nvar cliui = require('cliui');\n\nvar decamelize = require('decamelize');\n\nvar stringWidth = require('string-width');\n\nvar wsize = require('window-size');\n\nmodule.exports = function (yargs, y18n) {\n  var __ = y18n.__;\n  var self = {}; // methods for ouputting/building failure message.\n\n  var fails = [];\n\n  self.failFn = function (f) {\n    fails.push(f);\n  };\n\n  var failMessage = null;\n  var showHelpOnFail = true;\n\n  self.showHelpOnFail = function (enabled, message) {\n    if (typeof enabled === 'string') {\n      message = enabled;\n      enabled = true;\n    } else if (typeof enabled === 'undefined') {\n      enabled = true;\n    }\n\n    failMessage = message;\n    showHelpOnFail = enabled;\n    return self;\n  };\n\n  var failureOutput = false;\n\n  self.fail = function (msg) {\n    if (fails.length) {\n      fails.forEach(function (f) {\n        f(msg);\n      });\n    } else {\n      // don't output failure message more than once\n      if (!failureOutput) {\n        failureOutput = true;\n        if (showHelpOnFail) yargs.showHelp('error');\n        if (msg) console.error(msg);\n\n        if (failMessage) {\n          if (msg) console.error('');\n          console.error(failMessage);\n        }\n      }\n\n      if (yargs.getExitProcess()) {\n        process.exit(1);\n      } else {\n        throw new Error(msg);\n      }\n    }\n  }; // methods for ouputting/building help (usage) message.\n\n\n  var usage;\n\n  self.usage = function (msg) {\n    usage = msg;\n  };\n\n  var examples = [];\n\n  self.example = function (cmd, description) {\n    examples.push([cmd, description || '']);\n  };\n\n  var commands = [];\n\n  self.command = function (cmd, description) {\n    commands.push([cmd, description || '']);\n  };\n\n  self.getCommands = function () {\n    return commands;\n  };\n\n  var descriptions = {};\n\n  self.describe = function (key, desc) {\n    if (typeof key === 'object') {\n      Object.keys(key).forEach(function (k) {\n        self.describe(k, key[k]);\n      });\n    } else {\n      descriptions[key] = desc;\n    }\n  };\n\n  self.getDescriptions = function () {\n    return descriptions;\n  };\n\n  var epilog;\n\n  self.epilog = function (msg) {\n    epilog = msg;\n  };\n\n  var wrap = windowWidth();\n\n  self.wrap = function (cols) {\n    wrap = cols;\n  };\n\n  var deferY18nLookupPrefix = '__yargsString__:';\n\n  self.deferY18nLookup = function (str) {\n    return deferY18nLookupPrefix + str;\n  };\n\n  var defaultGroup = 'Options:';\n\n  self.help = function () {\n    normalizeAliases();\n    var demanded = yargs.getDemanded();\n    var groups = yargs.getGroups();\n    var options = yargs.getOptions();\n    var keys = Object.keys(Object.keys(descriptions).concat(Object.keys(demanded)).concat(Object.keys(options.default)).reduce(function (acc, key) {\n      if (key !== '_') acc[key] = true;\n      return acc;\n    }, {}));\n    var ui = cliui({\n      width: wrap,\n      wrap: !!wrap\n    }); // the usage string.\n\n    if (usage) {\n      var u = usage.replace(/\\$0/g, yargs.$0);\n      ui.div(u + '\\n');\n    } // your application's commands, i.e., non-option\n    // arguments populated in '_'.\n\n\n    if (commands.length) {\n      ui.div(__('Commands:'));\n      commands.forEach(function (command) {\n        ui.div({\n          text: command[0],\n          padding: [0, 2, 0, 2],\n          width: maxWidth(commands) + 4\n        }, {\n          text: command[1]\n        });\n      });\n      ui.div();\n    } // perform some cleanup on the keys array, making it\n    // only include top-level keys not their aliases.\n\n\n    var aliasKeys = (Object.keys(options.alias) || []).concat(Object.keys(yargs.parsed.newAliases) || []);\n    keys = keys.filter(function (key) {\n      return !yargs.parsed.newAliases[key] && aliasKeys.every(function (alias) {\n        return (options.alias[alias] || []).indexOf(key) === -1;\n      });\n    }); // populate 'Options:' group with any keys that have not\n    // explicitly had a group set.\n\n    if (!groups[defaultGroup]) groups[defaultGroup] = [];\n    addUngroupedKeys(keys, options.alias, groups); // display 'Options:' table along with any custom tables:\n\n    Object.keys(groups).forEach(function (groupName) {\n      if (!groups[groupName].length) return;\n      ui.div(__(groupName)); // if we've grouped the key 'f', but 'f' aliases 'foobar',\n      // normalizedKeys should contain only 'foobar'.\n\n      var normalizedKeys = groups[groupName].map(function (key) {\n        if (~aliasKeys.indexOf(key)) return key;\n\n        for (var i = 0, aliasKey; (aliasKey = aliasKeys[i]) !== undefined; i++) {\n          if (~(options.alias[aliasKey] || []).indexOf(key)) return aliasKey;\n        }\n\n        return key;\n      }); // actually generate the switches string --foo, -f, --bar.\n\n      var switches = normalizedKeys.reduce(function (acc, key) {\n        acc[key] = [key].concat(options.alias[key] || []).map(function (sw) {\n          return (sw.length > 1 ? '--' : '-') + sw;\n        }).join(', ');\n        return acc;\n      }, {});\n      normalizedKeys.forEach(function (key) {\n        var kswitch = switches[key];\n        var desc = descriptions[key] || '';\n        var type = null;\n        if (~desc.lastIndexOf(deferY18nLookupPrefix)) desc = __(desc.substring(deferY18nLookupPrefix.length));\n        if (~options.boolean.indexOf(key)) type = '[' + __('boolean') + ']';\n        if (~options.count.indexOf(key)) type = '[' + __('count') + ']';\n        if (~options.string.indexOf(key)) type = '[' + __('string') + ']';\n        if (~options.normalize.indexOf(key)) type = '[' + __('string') + ']';\n        if (~options.array.indexOf(key)) type = '[' + __('array') + ']';\n        var extra = [type, demanded[key] ? '[' + __('required') + ']' : null, options.choices && options.choices[key] ? '[' + __('choices:') + ' ' + self.stringifiedValues(options.choices[key]) + ']' : null, defaultString(options.default[key], options.defaultDescription[key])].filter(Boolean).join(' ');\n        ui.span({\n          text: kswitch,\n          padding: [0, 2, 0, 2],\n          width: maxWidth(switches) + 4\n        }, desc);\n        if (extra) ui.div({\n          text: extra,\n          padding: [0, 0, 0, 2],\n          align: 'right'\n        });else ui.div();\n      });\n      ui.div();\n    }); // describe some common use-cases for your application.\n\n    if (examples.length) {\n      ui.div(__('Examples:'));\n      examples.forEach(function (example) {\n        example[0] = example[0].replace(/\\$0/g, yargs.$0);\n      });\n      examples.forEach(function (example) {\n        ui.div({\n          text: example[0],\n          padding: [0, 2, 0, 2],\n          width: maxWidth(examples) + 4\n        }, example[1]);\n      });\n      ui.div();\n    } // the usage string.\n\n\n    if (epilog) {\n      var e = epilog.replace(/\\$0/g, yargs.$0);\n      ui.div(e + '\\n');\n    }\n\n    return ui.toString();\n  }; // return the maximum width of a string\n  // in the left-hand column of a table.\n\n\n  function maxWidth(table) {\n    var width = 0; // table might be of the form [leftColumn],\n    // or {key: leftColumn}}\n\n    if (!Array.isArray(table)) {\n      table = Object.keys(table).map(function (key) {\n        return [table[key]];\n      });\n    }\n\n    table.forEach(function (v) {\n      width = Math.max(stringWidth(v[0]), width);\n    }); // if we've enabled 'wrap' we should limit\n    // the max-width of the left-column.\n\n    if (wrap) width = Math.min(width, parseInt(wrap * 0.5, 10));\n    return width;\n  } // make sure any options set for aliases,\n  // are copied to the keys being aliased.\n\n\n  function normalizeAliases() {\n    var demanded = yargs.getDemanded();\n    var options = yargs.getOptions();\n    (Object.keys(options.alias) || []).forEach(function (key) {\n      options.alias[key].forEach(function (alias) {\n        // copy descriptions.\n        if (descriptions[alias]) self.describe(key, descriptions[alias]); // copy demanded.\n\n        if (demanded[alias]) yargs.demand(key, demanded[alias].msg); // type messages.\n\n        if (~options.boolean.indexOf(alias)) yargs.boolean(key);\n        if (~options.count.indexOf(alias)) yargs.count(key);\n        if (~options.string.indexOf(alias)) yargs.string(key);\n        if (~options.normalize.indexOf(alias)) yargs.normalize(key);\n        if (~options.array.indexOf(alias)) yargs.array(key);\n      });\n    });\n  } // given a set of keys, place any keys that are\n  // ungrouped under the 'Options:' grouping.\n\n\n  function addUngroupedKeys(keys, aliases, groups) {\n    var groupedKeys = [];\n    var toCheck = null;\n    Object.keys(groups).forEach(function (group) {\n      groupedKeys = groupedKeys.concat(groups[group]);\n    });\n    keys.forEach(function (key) {\n      toCheck = [key].concat(aliases[key]);\n\n      if (!toCheck.some(function (k) {\n        return groupedKeys.indexOf(k) !== -1;\n      })) {\n        groups[defaultGroup].push(key);\n      }\n    });\n    return groupedKeys;\n  }\n\n  self.showHelp = function (level) {\n    level = level || 'error';\n    console[level](self.help());\n  };\n\n  self.functionDescription = function (fn) {\n    var description = fn.name ? decamelize(fn.name, '-') : __('generated-value');\n    return ['(', description, ')'].join('');\n  };\n\n  self.stringifiedValues = function (values, separator) {\n    var string = '';\n    var sep = separator || ', ';\n    var array = [].concat(values);\n    if (!values || !array.length) return string;\n    array.forEach(function (value) {\n      if (string.length) string += sep;\n      string += JSON.stringify(value);\n    });\n    return string;\n  }; // format the default-value-string displayed in\n  // the right-hand column.\n\n\n  function defaultString(value, defaultDescription) {\n    var string = '[' + __('default:') + ' ';\n    if (value === undefined && !defaultDescription) return null;\n\n    if (defaultDescription) {\n      string += defaultDescription;\n    } else {\n      switch (typeof value) {\n        case 'string':\n          string += JSON.stringify(value);\n          break;\n\n        case 'object':\n          string += JSON.stringify(value);\n          break;\n\n        default:\n          string += value;\n      }\n    }\n\n    return string + ']';\n  } // guess the width of the console window, max-width 80.\n\n\n  function windowWidth() {\n    return wsize.width ? Math.min(80, wsize.width) : null;\n  } // logic for displaying application version.\n\n\n  var version = null;\n\n  self.version = function (ver, opt, msg) {\n    version = ver;\n  };\n\n  self.showVersion = function () {\n    if (typeof version === 'function') console.log(version());else console.log(version);\n  };\n\n  return self;\n};","map":{"version":3,"sources":["/home/marcel/Desktop/CobaProject/GUI backless-js/axsis/node_modules/curlconverter/node_modules/yargs/lib/usage.js"],"names":["cliui","require","decamelize","stringWidth","wsize","module","exports","yargs","y18n","__","self","fails","failFn","f","push","failMessage","showHelpOnFail","enabled","message","failureOutput","fail","msg","length","forEach","showHelp","console","error","getExitProcess","process","exit","Error","usage","examples","example","cmd","description","commands","command","getCommands","descriptions","describe","key","desc","Object","keys","k","getDescriptions","epilog","wrap","windowWidth","cols","deferY18nLookupPrefix","deferY18nLookup","str","defaultGroup","help","normalizeAliases","demanded","getDemanded","groups","getGroups","options","getOptions","concat","default","reduce","acc","ui","width","u","replace","$0","div","text","padding","maxWidth","aliasKeys","alias","parsed","newAliases","filter","every","indexOf","addUngroupedKeys","groupName","normalizedKeys","map","i","aliasKey","undefined","switches","sw","join","kswitch","type","lastIndexOf","substring","boolean","count","string","normalize","array","extra","choices","stringifiedValues","defaultString","defaultDescription","Boolean","span","align","e","toString","table","Array","isArray","v","Math","max","min","parseInt","demand","aliases","groupedKeys","toCheck","group","some","level","functionDescription","fn","name","values","separator","sep","value","JSON","stringify","version","ver","opt","showVersion","log"],"mappings":"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","sourcesContent":["// this file handles outputting usage instructions,\n// failures, etc. keeps logging in one place.\nvar cliui = require('cliui')\nvar decamelize = require('decamelize')\nvar stringWidth = require('string-width')\nvar wsize = require('window-size')\n\nmodule.exports = function (yargs, y18n) {\n  var __ = y18n.__\n  var self = {}\n\n  // methods for ouputting/building failure message.\n  var fails = []\n  self.failFn = function (f) {\n    fails.push(f)\n  }\n\n  var failMessage = null\n  var showHelpOnFail = true\n  self.showHelpOnFail = function (enabled, message) {\n    if (typeof enabled === 'string') {\n      message = enabled\n      enabled = true\n    } else if (typeof enabled === 'undefined') {\n      enabled = true\n    }\n    failMessage = message\n    showHelpOnFail = enabled\n    return self\n  }\n\n  var failureOutput = false\n  self.fail = function (msg) {\n    if (fails.length) {\n      fails.forEach(function (f) {\n        f(msg)\n      })\n    } else {\n      // don't output failure message more than once\n      if (!failureOutput) {\n        failureOutput = true\n        if (showHelpOnFail) yargs.showHelp('error')\n        if (msg) console.error(msg)\n        if (failMessage) {\n          if (msg) console.error('')\n          console.error(failMessage)\n        }\n      }\n      if (yargs.getExitProcess()) {\n        process.exit(1)\n      } else {\n        throw new Error(msg)\n      }\n    }\n  }\n\n  // methods for ouputting/building help (usage) message.\n  var usage\n  self.usage = function (msg) {\n    usage = msg\n  }\n\n  var examples = []\n  self.example = function (cmd, description) {\n    examples.push([cmd, description || ''])\n  }\n\n  var commands = []\n  self.command = function (cmd, description) {\n    commands.push([cmd, description || ''])\n  }\n  self.getCommands = function () {\n    return commands\n  }\n\n  var descriptions = {}\n  self.describe = function (key, desc) {\n    if (typeof key === 'object') {\n      Object.keys(key).forEach(function (k) {\n        self.describe(k, key[k])\n      })\n    } else {\n      descriptions[key] = desc\n    }\n  }\n  self.getDescriptions = function () {\n    return descriptions\n  }\n\n  var epilog\n  self.epilog = function (msg) {\n    epilog = msg\n  }\n\n  var wrap = windowWidth()\n  self.wrap = function (cols) {\n    wrap = cols\n  }\n\n  var deferY18nLookupPrefix = '__yargsString__:'\n  self.deferY18nLookup = function (str) {\n    return deferY18nLookupPrefix + str\n  }\n\n  var defaultGroup = 'Options:'\n  self.help = function () {\n    normalizeAliases()\n\n    var demanded = yargs.getDemanded()\n    var groups = yargs.getGroups()\n    var options = yargs.getOptions()\n    var keys = Object.keys(\n      Object.keys(descriptions)\n      .concat(Object.keys(demanded))\n      .concat(Object.keys(options.default))\n      .reduce(function (acc, key) {\n        if (key !== '_') acc[key] = true\n        return acc\n      }, {})\n    )\n    var ui = cliui({\n      width: wrap,\n      wrap: !!wrap\n    })\n\n    // the usage string.\n    if (usage) {\n      var u = usage.replace(/\\$0/g, yargs.$0)\n      ui.div(u + '\\n')\n    }\n\n    // your application's commands, i.e., non-option\n    // arguments populated in '_'.\n    if (commands.length) {\n      ui.div(__('Commands:'))\n\n      commands.forEach(function (command) {\n        ui.div(\n          {text: command[0], padding: [0, 2, 0, 2], width: maxWidth(commands) + 4},\n          {text: command[1]}\n        )\n      })\n\n      ui.div()\n    }\n\n    // perform some cleanup on the keys array, making it\n    // only include top-level keys not their aliases.\n    var aliasKeys = (Object.keys(options.alias) || [])\n      .concat(Object.keys(yargs.parsed.newAliases) || [])\n\n    keys = keys.filter(function (key) {\n      return !yargs.parsed.newAliases[key] && aliasKeys.every(function (alias) {\n        return (options.alias[alias] || []).indexOf(key) === -1\n      })\n    })\n\n    // populate 'Options:' group with any keys that have not\n    // explicitly had a group set.\n    if (!groups[defaultGroup]) groups[defaultGroup] = []\n    addUngroupedKeys(keys, options.alias, groups)\n\n    // display 'Options:' table along with any custom tables:\n    Object.keys(groups).forEach(function (groupName) {\n      if (!groups[groupName].length) return\n\n      ui.div(__(groupName))\n\n      // if we've grouped the key 'f', but 'f' aliases 'foobar',\n      // normalizedKeys should contain only 'foobar'.\n      var normalizedKeys = groups[groupName].map(function (key) {\n        if (~aliasKeys.indexOf(key)) return key\n        for (var i = 0, aliasKey; (aliasKey = aliasKeys[i]) !== undefined; i++) {\n          if (~(options.alias[aliasKey] || []).indexOf(key)) return aliasKey\n        }\n        return key\n      })\n\n      // actually generate the switches string --foo, -f, --bar.\n      var switches = normalizedKeys.reduce(function (acc, key) {\n        acc[key] = [ key ].concat(options.alias[key] || [])\n          .map(function (sw) {\n            return (sw.length > 1 ? '--' : '-') + sw\n          })\n          .join(', ')\n\n        return acc\n      }, {})\n\n      normalizedKeys.forEach(function (key) {\n        var kswitch = switches[key]\n        var desc = descriptions[key] || ''\n        var type = null\n\n        if (~desc.lastIndexOf(deferY18nLookupPrefix)) desc = __(desc.substring(deferY18nLookupPrefix.length))\n\n        if (~options.boolean.indexOf(key)) type = '[' + __('boolean') + ']'\n        if (~options.count.indexOf(key)) type = '[' + __('count') + ']'\n        if (~options.string.indexOf(key)) type = '[' + __('string') + ']'\n        if (~options.normalize.indexOf(key)) type = '[' + __('string') + ']'\n        if (~options.array.indexOf(key)) type = '[' + __('array') + ']'\n\n        var extra = [\n          type,\n          demanded[key] ? '[' + __('required') + ']' : null,\n          options.choices && options.choices[key] ? '[' + __('choices:') + ' ' +\n            self.stringifiedValues(options.choices[key]) + ']' : null,\n          defaultString(options.default[key], options.defaultDescription[key])\n        ].filter(Boolean).join(' ')\n\n        ui.span(\n          {text: kswitch, padding: [0, 2, 0, 2], width: maxWidth(switches) + 4},\n          desc\n        )\n\n        if (extra) ui.div({text: extra, padding: [0, 0, 0, 2], align: 'right'})\n        else ui.div()\n      })\n\n      ui.div()\n    })\n\n    // describe some common use-cases for your application.\n    if (examples.length) {\n      ui.div(__('Examples:'))\n\n      examples.forEach(function (example) {\n        example[0] = example[0].replace(/\\$0/g, yargs.$0)\n      })\n\n      examples.forEach(function (example) {\n        ui.div(\n          {text: example[0], padding: [0, 2, 0, 2], width: maxWidth(examples) + 4},\n          example[1]\n        )\n      })\n\n      ui.div()\n    }\n\n    // the usage string.\n    if (epilog) {\n      var e = epilog.replace(/\\$0/g, yargs.$0)\n      ui.div(e + '\\n')\n    }\n\n    return ui.toString()\n  }\n\n  // return the maximum width of a string\n  // in the left-hand column of a table.\n  function maxWidth (table) {\n    var width = 0\n\n    // table might be of the form [leftColumn],\n    // or {key: leftColumn}}\n    if (!Array.isArray(table)) {\n      table = Object.keys(table).map(function (key) {\n        return [table[key]]\n      })\n    }\n\n    table.forEach(function (v) {\n      width = Math.max(stringWidth(v[0]), width)\n    })\n\n    // if we've enabled 'wrap' we should limit\n    // the max-width of the left-column.\n    if (wrap) width = Math.min(width, parseInt(wrap * 0.5, 10))\n\n    return width\n  }\n\n  // make sure any options set for aliases,\n  // are copied to the keys being aliased.\n  function normalizeAliases () {\n    var demanded = yargs.getDemanded()\n    var options = yargs.getOptions()\n\n    ;(Object.keys(options.alias) || []).forEach(function (key) {\n      options.alias[key].forEach(function (alias) {\n        // copy descriptions.\n        if (descriptions[alias]) self.describe(key, descriptions[alias])\n        // copy demanded.\n        if (demanded[alias]) yargs.demand(key, demanded[alias].msg)\n        // type messages.\n        if (~options.boolean.indexOf(alias)) yargs.boolean(key)\n        if (~options.count.indexOf(alias)) yargs.count(key)\n        if (~options.string.indexOf(alias)) yargs.string(key)\n        if (~options.normalize.indexOf(alias)) yargs.normalize(key)\n        if (~options.array.indexOf(alias)) yargs.array(key)\n      })\n    })\n  }\n\n  // given a set of keys, place any keys that are\n  // ungrouped under the 'Options:' grouping.\n  function addUngroupedKeys (keys, aliases, groups) {\n    var groupedKeys = []\n    var toCheck = null\n    Object.keys(groups).forEach(function (group) {\n      groupedKeys = groupedKeys.concat(groups[group])\n    })\n\n    keys.forEach(function (key) {\n      toCheck = [key].concat(aliases[key])\n      if (!toCheck.some(function (k) {\n        return groupedKeys.indexOf(k) !== -1\n      })) {\n        groups[defaultGroup].push(key)\n      }\n    })\n    return groupedKeys\n  }\n\n  self.showHelp = function (level) {\n    level = level || 'error'\n    console[level](self.help())\n  }\n\n  self.functionDescription = function (fn) {\n    var description = fn.name ? decamelize(fn.name, '-') : __('generated-value')\n    return ['(', description, ')'].join('')\n  }\n\n  self.stringifiedValues = function (values, separator) {\n    var string = ''\n    var sep = separator || ', '\n    var array = [].concat(values)\n\n    if (!values || !array.length) return string\n\n    array.forEach(function (value) {\n      if (string.length) string += sep\n      string += JSON.stringify(value)\n    })\n\n    return string\n  }\n\n  // format the default-value-string displayed in\n  // the right-hand column.\n  function defaultString (value, defaultDescription) {\n    var string = '[' + __('default:') + ' '\n\n    if (value === undefined && !defaultDescription) return null\n\n    if (defaultDescription) {\n      string += defaultDescription\n    } else {\n      switch (typeof value) {\n        case 'string':\n          string += JSON.stringify(value)\n          break\n        case 'object':\n          string += JSON.stringify(value)\n          break\n        default:\n          string += value\n      }\n    }\n\n    return string + ']'\n  }\n\n  // guess the width of the console window, max-width 80.\n  function windowWidth () {\n    return wsize.width ? Math.min(80, wsize.width) : null\n  }\n\n  // logic for displaying application version.\n  var version = null\n  self.version = function (ver, opt, msg) {\n    version = ver\n  }\n\n  self.showVersion = function () {\n    if (typeof version === 'function') console.log(version())\n    else console.log(version)\n  }\n\n  return self\n}\n"]},"metadata":{},"sourceType":"script"}