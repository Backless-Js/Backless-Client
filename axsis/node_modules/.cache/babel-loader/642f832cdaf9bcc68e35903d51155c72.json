{"ast":null,"code":"'use strict';\n\nfunction preserveCamelCase(str) {\n  var isLastCharLower = false;\n\n  for (var i = 0; i < str.length; i++) {\n    var c = str.charAt(i);\n\n    if (isLastCharLower && /[a-zA-Z]/.test(c) && c.toUpperCase() === c) {\n      str = str.substr(0, i) + '-' + str.substr(i);\n      isLastCharLower = false;\n      i++;\n    } else {\n      isLastCharLower = c.toLowerCase() === c;\n    }\n  }\n\n  return str;\n}\n\nmodule.exports = function () {\n  var str = [].map.call(arguments, function (str) {\n    return str.trim();\n  }).filter(function (str) {\n    return str.length;\n  }).join('-');\n\n  if (!str.length) {\n    return '';\n  }\n\n  if (str.length === 1) {\n    return str;\n  }\n\n  if (!/[_.\\- ]+/.test(str)) {\n    if (str === str.toUpperCase()) {\n      return str.toLowerCase();\n    }\n\n    if (str[0] !== str[0].toLowerCase()) {\n      return str[0].toLowerCase() + str.slice(1);\n    }\n\n    return str;\n  }\n\n  str = preserveCamelCase(str);\n  return str.replace(/^[_.\\- ]+/, '').toLowerCase().replace(/[_.\\- ]+(\\w|$)/g, function (m, p1) {\n    return p1.toUpperCase();\n  });\n};","map":{"version":3,"sources":["/home/marcel/Desktop/CobaProject/GUI backless-js/axsis/node_modules/curlconverter/node_modules/camelcase/index.js"],"names":["preserveCamelCase","str","isLastCharLower","i","length","c","charAt","test","toUpperCase","substr","toLowerCase","module","exports","map","call","arguments","trim","filter","join","slice","replace","m","p1"],"mappings":"AAAA;;AAEA,SAASA,iBAAT,CAA2BC,GAA3B,EAAgC;AAC/B,MAAIC,eAAe,GAAG,KAAtB;;AAEA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,GAAG,CAACG,MAAxB,EAAgCD,CAAC,EAAjC,EAAqC;AACpC,QAAIE,CAAC,GAAGJ,GAAG,CAACK,MAAJ,CAAWH,CAAX,CAAR;;AAEA,QAAID,eAAe,IAAK,UAAD,CAAaK,IAAb,CAAkBF,CAAlB,CAAnB,IAA2CA,CAAC,CAACG,WAAF,OAAoBH,CAAnE,EAAsE;AACrEJ,MAAAA,GAAG,GAAGA,GAAG,CAACQ,MAAJ,CAAW,CAAX,EAAcN,CAAd,IAAmB,GAAnB,GAAyBF,GAAG,CAACQ,MAAJ,CAAWN,CAAX,CAA/B;AACAD,MAAAA,eAAe,GAAG,KAAlB;AACAC,MAAAA,CAAC;AACD,KAJD,MAIO;AACND,MAAAA,eAAe,GAAIG,CAAC,CAACK,WAAF,OAAoBL,CAAvC;AACA;AACD;;AAED,SAAOJ,GAAP;AACA;;AAEDU,MAAM,CAACC,OAAP,GAAiB,YAAY;AAC5B,MAAIX,GAAG,GAAG,GAAGY,GAAH,CAAOC,IAAP,CAAYC,SAAZ,EAAuB,UAAUd,GAAV,EAAe;AAC/C,WAAOA,GAAG,CAACe,IAAJ,EAAP;AACA,GAFS,EAEPC,MAFO,CAEA,UAAUhB,GAAV,EAAe;AACxB,WAAOA,GAAG,CAACG,MAAX;AACA,GAJS,EAIPc,IAJO,CAIF,GAJE,CAAV;;AAMA,MAAI,CAACjB,GAAG,CAACG,MAAT,EAAiB;AAChB,WAAO,EAAP;AACA;;AAED,MAAIH,GAAG,CAACG,MAAJ,KAAe,CAAnB,EAAsB;AACrB,WAAOH,GAAP;AACA;;AAED,MAAI,CAAE,UAAD,CAAaM,IAAb,CAAkBN,GAAlB,CAAL,EAA6B;AAC5B,QAAIA,GAAG,KAAKA,GAAG,CAACO,WAAJ,EAAZ,EAA+B;AAC9B,aAAOP,GAAG,CAACS,WAAJ,EAAP;AACA;;AAED,QAAIT,GAAG,CAAC,CAAD,CAAH,KAAWA,GAAG,CAAC,CAAD,CAAH,CAAOS,WAAP,EAAf,EAAqC;AACpC,aAAOT,GAAG,CAAC,CAAD,CAAH,CAAOS,WAAP,KAAuBT,GAAG,CAACkB,KAAJ,CAAU,CAAV,CAA9B;AACA;;AAED,WAAOlB,GAAP;AACA;;AAEDA,EAAAA,GAAG,GAAGD,iBAAiB,CAACC,GAAD,CAAvB;AAEA,SAAOA,GAAG,CACTmB,OADM,CACE,WADF,EACe,EADf,EAENV,WAFM,GAGNU,OAHM,CAGE,iBAHF,EAGqB,UAAUC,CAAV,EAAaC,EAAb,EAAiB;AAC5C,WAAOA,EAAE,CAACd,WAAH,EAAP;AACA,GALM,CAAP;AAMA,CAnCD","sourcesContent":["'use strict';\n\nfunction preserveCamelCase(str) {\n\tvar isLastCharLower = false;\n\n\tfor (var i = 0; i < str.length; i++) {\n\t\tvar c = str.charAt(i);\n\n\t\tif (isLastCharLower && (/[a-zA-Z]/).test(c) && c.toUpperCase() === c) {\n\t\t\tstr = str.substr(0, i) + '-' + str.substr(i);\n\t\t\tisLastCharLower = false;\n\t\t\ti++;\n\t\t} else {\n\t\t\tisLastCharLower = (c.toLowerCase() === c);\n\t\t}\n\t}\n\n\treturn str;\n}\n\nmodule.exports = function () {\n\tvar str = [].map.call(arguments, function (str) {\n\t\treturn str.trim();\n\t}).filter(function (str) {\n\t\treturn str.length;\n\t}).join('-');\n\n\tif (!str.length) {\n\t\treturn '';\n\t}\n\n\tif (str.length === 1) {\n\t\treturn str;\n\t}\n\n\tif (!(/[_.\\- ]+/).test(str)) {\n\t\tif (str === str.toUpperCase()) {\n\t\t\treturn str.toLowerCase();\n\t\t}\n\n\t\tif (str[0] !== str[0].toLowerCase()) {\n\t\t\treturn str[0].toLowerCase() + str.slice(1);\n\t\t}\n\n\t\treturn str;\n\t}\n\n\tstr = preserveCamelCase(str);\n\n\treturn str\n\t.replace(/^[_.\\- ]+/, '')\n\t.toLowerCase()\n\t.replace(/[_.\\- ]+(\\w|$)/g, function (m, p1) {\n\t\treturn p1.toUpperCase();\n\t});\n};\n"]},"metadata":{},"sourceType":"script"}