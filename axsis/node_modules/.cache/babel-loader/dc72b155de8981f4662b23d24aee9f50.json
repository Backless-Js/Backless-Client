{"ast":null,"code":"var _fs;\n\ntry {\n  _fs = require('graceful-fs');\n} catch (_) {\n  _fs = require('fs');\n}\n\nfunction readFile(file, options, callback) {\n  if (callback == null) {\n    callback = options;\n    options = {};\n  }\n\n  if (typeof options === 'string') {\n    options = {\n      encoding: options\n    };\n  }\n\n  options = options || {};\n  var fs = options.fs || _fs;\n  var shouldThrow = true;\n\n  if ('throws' in options) {\n    shouldThrow = options.throws;\n  }\n\n  fs.readFile(file, options, function (err, data) {\n    if (err) return callback(err);\n    data = stripBom(data);\n    var obj;\n\n    try {\n      obj = JSON.parse(data, options ? options.reviver : null);\n    } catch (err2) {\n      if (shouldThrow) {\n        err2.message = file + ': ' + err2.message;\n        return callback(err2);\n      } else {\n        return callback(null, null);\n      }\n    }\n\n    callback(null, obj);\n  });\n}\n\nfunction readFileSync(file, options) {\n  options = options || {};\n\n  if (typeof options === 'string') {\n    options = {\n      encoding: options\n    };\n  }\n\n  var fs = options.fs || _fs;\n  var shouldThrow = true;\n\n  if ('throws' in options) {\n    shouldThrow = options.throws;\n  }\n\n  try {\n    var content = fs.readFileSync(file, options);\n    content = stripBom(content);\n    return JSON.parse(content, options.reviver);\n  } catch (err) {\n    if (shouldThrow) {\n      err.message = file + ': ' + err.message;\n      throw err;\n    } else {\n      return null;\n    }\n  }\n}\n\nfunction stringify(obj, options) {\n  var spaces;\n  var EOL = '\\n';\n\n  if (typeof options === 'object' && options !== null) {\n    if (options.spaces) {\n      spaces = options.spaces;\n    }\n\n    if (options.EOL) {\n      EOL = options.EOL;\n    }\n  }\n\n  var str = JSON.stringify(obj, options ? options.replacer : null, spaces);\n  return str.replace(/\\n/g, EOL) + EOL;\n}\n\nfunction writeFile(file, obj, options, callback) {\n  if (callback == null) {\n    callback = options;\n    options = {};\n  }\n\n  options = options || {};\n  var fs = options.fs || _fs;\n  var str = '';\n\n  try {\n    str = stringify(obj, options);\n  } catch (err) {\n    // Need to return whether a callback was passed or not\n    if (callback) callback(err, null);\n    return;\n  }\n\n  fs.writeFile(file, str, options, callback);\n}\n\nfunction writeFileSync(file, obj, options) {\n  options = options || {};\n  var fs = options.fs || _fs;\n  var str = stringify(obj, options); // not sure if fs.writeFileSync returns anything, but just in case\n\n  return fs.writeFileSync(file, str, options);\n}\n\nfunction stripBom(content) {\n  // we do this because JSON.parse would convert it to a utf8 string if encoding wasn't specified\n  if (Buffer.isBuffer(content)) content = content.toString('utf8');\n  content = content.replace(/^\\uFEFF/, '');\n  return content;\n}\n\nvar jsonfile = {\n  readFile: readFile,\n  readFileSync: readFileSync,\n  writeFile: writeFile,\n  writeFileSync: writeFileSync\n};\nmodule.exports = jsonfile;","map":{"version":3,"sources":["/home/marcel/Desktop/CobaProject/GUI backless-js/axsis/node_modules/jsonfile/index.js"],"names":["_fs","require","_","readFile","file","options","callback","encoding","fs","shouldThrow","throws","err","data","stripBom","obj","JSON","parse","reviver","err2","message","readFileSync","content","stringify","spaces","EOL","str","replacer","replace","writeFile","writeFileSync","Buffer","isBuffer","toString","jsonfile","module","exports"],"mappings":"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","sourcesContent":["var _fs\ntry {\n  _fs = require('graceful-fs')\n} catch (_) {\n  _fs = require('fs')\n}\n\nfunction readFile (file, options, callback) {\n  if (callback == null) {\n    callback = options\n    options = {}\n  }\n\n  if (typeof options === 'string') {\n    options = {encoding: options}\n  }\n\n  options = options || {}\n  var fs = options.fs || _fs\n\n  var shouldThrow = true\n  if ('throws' in options) {\n    shouldThrow = options.throws\n  }\n\n  fs.readFile(file, options, function (err, data) {\n    if (err) return callback(err)\n\n    data = stripBom(data)\n\n    var obj\n    try {\n      obj = JSON.parse(data, options ? options.reviver : null)\n    } catch (err2) {\n      if (shouldThrow) {\n        err2.message = file + ': ' + err2.message\n        return callback(err2)\n      } else {\n        return callback(null, null)\n      }\n    }\n\n    callback(null, obj)\n  })\n}\n\nfunction readFileSync (file, options) {\n  options = options || {}\n  if (typeof options === 'string') {\n    options = {encoding: options}\n  }\n\n  var fs = options.fs || _fs\n\n  var shouldThrow = true\n  if ('throws' in options) {\n    shouldThrow = options.throws\n  }\n\n  try {\n    var content = fs.readFileSync(file, options)\n    content = stripBom(content)\n    return JSON.parse(content, options.reviver)\n  } catch (err) {\n    if (shouldThrow) {\n      err.message = file + ': ' + err.message\n      throw err\n    } else {\n      return null\n    }\n  }\n}\n\nfunction stringify (obj, options) {\n  var spaces\n  var EOL = '\\n'\n  if (typeof options === 'object' && options !== null) {\n    if (options.spaces) {\n      spaces = options.spaces\n    }\n    if (options.EOL) {\n      EOL = options.EOL\n    }\n  }\n\n  var str = JSON.stringify(obj, options ? options.replacer : null, spaces)\n\n  return str.replace(/\\n/g, EOL) + EOL\n}\n\nfunction writeFile (file, obj, options, callback) {\n  if (callback == null) {\n    callback = options\n    options = {}\n  }\n  options = options || {}\n  var fs = options.fs || _fs\n\n  var str = ''\n  try {\n    str = stringify(obj, options)\n  } catch (err) {\n    // Need to return whether a callback was passed or not\n    if (callback) callback(err, null)\n    return\n  }\n\n  fs.writeFile(file, str, options, callback)\n}\n\nfunction writeFileSync (file, obj, options) {\n  options = options || {}\n  var fs = options.fs || _fs\n\n  var str = stringify(obj, options)\n  // not sure if fs.writeFileSync returns anything, but just in case\n  return fs.writeFileSync(file, str, options)\n}\n\nfunction stripBom (content) {\n  // we do this because JSON.parse would convert it to a utf8 string if encoding wasn't specified\n  if (Buffer.isBuffer(content)) content = content.toString('utf8')\n  content = content.replace(/^\\uFEFF/, '')\n  return content\n}\n\nvar jsonfile = {\n  readFile: readFile,\n  readFileSync: readFileSync,\n  writeFile: writeFile,\n  writeFileSync: writeFileSync\n}\n\nmodule.exports = jsonfile\n"]},"metadata":{},"sourceType":"script"}