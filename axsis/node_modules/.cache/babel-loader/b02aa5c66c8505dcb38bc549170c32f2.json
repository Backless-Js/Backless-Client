{"ast":null,"code":"/* eslint-disable babel/new-cap, xo/throw-new-error */\n'use strict';\n\nmodule.exports = function (str, pos) {\n  if (str === null || str === undefined) {\n    throw TypeError();\n  }\n\n  str = String(str);\n  var size = str.length;\n  var i = pos ? Number(pos) : 0;\n\n  if (Number.isNaN(i)) {\n    i = 0;\n  }\n\n  if (i < 0 || i >= size) {\n    return undefined;\n  }\n\n  var first = str.charCodeAt(i);\n\n  if (first >= 0xD800 && first <= 0xDBFF && size > i + 1) {\n    var second = str.charCodeAt(i + 1);\n\n    if (second >= 0xDC00 && second <= 0xDFFF) {\n      return (first - 0xD800) * 0x400 + second - 0xDC00 + 0x10000;\n    }\n  }\n\n  return first;\n};","map":{"version":3,"sources":["/home/marcel/Desktop/CobaProject/GUI backless-js/axsis/node_modules/code-point-at/index.js"],"names":["module","exports","str","pos","undefined","TypeError","String","size","length","i","Number","isNaN","first","charCodeAt","second"],"mappings":"AAAA;AACA;;AACAA,MAAM,CAACC,OAAP,GAAiB,UAAUC,GAAV,EAAeC,GAAf,EAAoB;AACpC,MAAID,GAAG,KAAK,IAAR,IAAgBA,GAAG,KAAKE,SAA5B,EAAuC;AACtC,UAAMC,SAAS,EAAf;AACA;;AAEDH,EAAAA,GAAG,GAAGI,MAAM,CAACJ,GAAD,CAAZ;AAEA,MAAIK,IAAI,GAAGL,GAAG,CAACM,MAAf;AACA,MAAIC,CAAC,GAAGN,GAAG,GAAGO,MAAM,CAACP,GAAD,CAAT,GAAiB,CAA5B;;AAEA,MAAIO,MAAM,CAACC,KAAP,CAAaF,CAAb,CAAJ,EAAqB;AACpBA,IAAAA,CAAC,GAAG,CAAJ;AACA;;AAED,MAAIA,CAAC,GAAG,CAAJ,IAASA,CAAC,IAAIF,IAAlB,EAAwB;AACvB,WAAOH,SAAP;AACA;;AAED,MAAIQ,KAAK,GAAGV,GAAG,CAACW,UAAJ,CAAeJ,CAAf,CAAZ;;AAEA,MAAIG,KAAK,IAAI,MAAT,IAAmBA,KAAK,IAAI,MAA5B,IAAsCL,IAAI,GAAGE,CAAC,GAAG,CAArD,EAAwD;AACvD,QAAIK,MAAM,GAAGZ,GAAG,CAACW,UAAJ,CAAeJ,CAAC,GAAG,CAAnB,CAAb;;AAEA,QAAIK,MAAM,IAAI,MAAV,IAAoBA,MAAM,IAAI,MAAlC,EAA0C;AACzC,aAAQ,CAACF,KAAK,GAAG,MAAT,IAAmB,KAApB,GAA6BE,MAA7B,GAAsC,MAAtC,GAA+C,OAAtD;AACA;AACD;;AAED,SAAOF,KAAP;AACA,CA7BD","sourcesContent":["/* eslint-disable babel/new-cap, xo/throw-new-error */\n'use strict';\nmodule.exports = function (str, pos) {\n\tif (str === null || str === undefined) {\n\t\tthrow TypeError();\n\t}\n\n\tstr = String(str);\n\n\tvar size = str.length;\n\tvar i = pos ? Number(pos) : 0;\n\n\tif (Number.isNaN(i)) {\n\t\ti = 0;\n\t}\n\n\tif (i < 0 || i >= size) {\n\t\treturn undefined;\n\t}\n\n\tvar first = str.charCodeAt(i);\n\n\tif (first >= 0xD800 && first <= 0xDBFF && size > i + 1) {\n\t\tvar second = str.charCodeAt(i + 1);\n\n\t\tif (second >= 0xDC00 && second <= 0xDFFF) {\n\t\t\treturn ((first - 0xD800) * 0x400) + second - 0xDC00 + 0x10000;\n\t\t}\n\t}\n\n\treturn first;\n};\n"]},"metadata":{},"sourceType":"script"}